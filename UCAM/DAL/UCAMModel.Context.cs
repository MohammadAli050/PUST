//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DAL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class PABNA_UCAMEntities : DbContext
    {
        public PABNA_UCAMEntities()
            : base("name=PABNA_UCAMEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<AcademicCalender> AcademicCalenders { get; set; }
        public virtual DbSet<Batch> Batches { get; set; }
        public virtual DbSet<CalenderUnitMaster> CalenderUnitMasters { get; set; }
        public virtual DbSet<CalenderUnitType> CalenderUnitTypes { get; set; }
        public virtual DbSet<Course> Courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Person> People { get; set; }
        public virtual DbSet<ExaminerSetup> ExaminerSetups { get; set; }
        public virtual DbSet<ExaminerSetupStudentWise> ExaminerSetupStudentWises { get; set; }
        public virtual DbSet<ExamSetup> ExamSetups { get; set; }
        public virtual DbSet<ExamSetupDetail> ExamSetupDetails { get; set; }
        public virtual DbSet<ExamTemplate> ExamTemplates { get; set; }
        public virtual DbSet<ExamTemplateItem> ExamTemplateItems { get; set; }
        public virtual DbSet<ExamHeldInAndProgramRelation> ExamHeldInAndProgramRelations { get; set; }
        public virtual DbSet<ExamSetupWithExamCommittee> ExamSetupWithExamCommittees { get; set; }
        public virtual DbSet<StudentYearSemesterHistory> StudentYearSemesterHistories { get; set; }
        public virtual DbSet<StudentCourseHistory> StudentCourseHistories { get; set; }
        public virtual DbSet<RegistrationWorksheet> RegistrationWorksheets { get; set; }
        public virtual DbSet<AcademicCalenderSection> AcademicCalenderSections { get; set; }
        public virtual DbSet<ExamHeldInInformation> ExamHeldInInformations { get; set; }
        public virtual DbSet<ExternalCommitteeMemberInformation> ExternalCommitteeMemberInformations { get; set; }
        public virtual DbSet<Semester> Semesters { get; set; }
        public virtual DbSet<Year> Years { get; set; }
        public virtual DbSet<ExamMarkDetail> ExamMarkDetails { get; set; }
        public virtual DbSet<PersonAdditionalInfo> PersonAdditionalInfoes { get; set; }
        public virtual DbSet<ExamHeldInRelationWiseTabulatorInformation> ExamHeldInRelationWiseTabulatorInformations { get; set; }
        public virtual DbSet<HallInformation> HallInformations { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<ApprovalServicesAuthorizationMatrix> ApprovalServicesAuthorizationMatrices { get; set; }
        public virtual DbSet<FirstExaminerMarkDetailsFirstTime> FirstExaminerMarkDetailsFirstTimes { get; set; }
        public virtual DbSet<FirstExaminerMarkDetailsSecondTime> FirstExaminerMarkDetailsSecondTimes { get; set; }
        public virtual DbSet<SectionWiseResultSubmissionStatu> SectionWiseResultSubmissionStatus { get; set; }
        public virtual DbSet<Employee> Employees { get; set; }
        public virtual DbSet<CourseTeacherMarkDetailsFirstTime> CourseTeacherMarkDetailsFirstTimes { get; set; }
        public virtual DbSet<CourseTeacherMarkDetailsSecondTime> CourseTeacherMarkDetailsSecondTimes { get; set; }
        public virtual DbSet<ExamMarkFirstSecondThirdExaminer> ExamMarkFirstSecondThirdExaminers { get; set; }
        public virtual DbSet<ExamMarkMaster> ExamMarkMasters { get; set; }
        public virtual DbSet<SecondExaminerMarkDetail> SecondExaminerMarkDetails { get; set; }
        public virtual DbSet<ThirdExaminerMarkDetail> ThirdExaminerMarkDetails { get; set; }
        public virtual DbSet<QuestionSetterAndScriptExaminerInformation> QuestionSetterAndScriptExaminerInformations { get; set; }
        public virtual DbSet<ApprovalServicesHistoryInformation> ApprovalServicesHistoryInformations { get; set; }
        public virtual DbSet<ThirdExaminerMarkDetailsFirstTime> ThirdExaminerMarkDetailsFirstTimes { get; set; }
        public virtual DbSet<ThirdExaminerMarkDetailsSecondTime> ThirdExaminerMarkDetailsSecondTimes { get; set; }
        public virtual DbSet<StudentReAdmissionInformation> StudentReAdmissionInformations { get; set; }
        public virtual DbSet<DateRangeActivityTypeInformation> DateRangeActivityTypeInformations { get; set; }
        public virtual DbSet<DateRangeSetupInformation> DateRangeSetupInformations { get; set; }
        public virtual DbSet<ExamMarkDateRangeSetup> ExamMarkDateRangeSetups { get; set; }
        public virtual DbSet<ExamAttendanceInformation> ExamAttendanceInformations { get; set; }
        public virtual DbSet<FacultyInformation> FacultyInformations { get; set; }
        public virtual DbSet<Program> Programs { get; set; }
        public virtual DbSet<ProgramType> ProgramTypes { get; set; }
    
        public virtual ObjectResult<AcademicCalenderGetAll_Result> AcademicCalenderGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AcademicCalenderGetAll_Result>("AcademicCalenderGetAll");
        }
    
        public virtual ObjectResult<AcademicCalenderGetById_Result> AcademicCalenderGetById(Nullable<int> academicCalenderID)
        {
            var academicCalenderIDParameter = academicCalenderID.HasValue ?
                new ObjectParameter("AcademicCalenderID", academicCalenderID) :
                new ObjectParameter("AcademicCalenderID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<AcademicCalenderGetById_Result>("AcademicCalenderGetById", academicCalenderIDParameter);
        }
    
        public virtual ObjectResult<BatchGetAll_Result> BatchGetAll()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchGetAll_Result>("BatchGetAll");
        }
    
        public virtual ObjectResult<BatchGetById_Result> BatchGetById(Nullable<int> batchId)
        {
            var batchIdParameter = batchId.HasValue ?
                new ObjectParameter("BatchId", batchId) :
                new ObjectParameter("BatchId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<BatchGetById_Result>("BatchGetById", batchIdParameter);
        }
    }
}

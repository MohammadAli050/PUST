//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

#pragma warning disable 1591

namespace EMS {
    
    
    /// <summary>
    ///Represents a strongly typed in-memory cache of data.
    ///</summary>
    [global::System.Serializable()]
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema")]
    [global::System.Xml.Serialization.XmlRootAttribute("DataSet1")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")]
    public partial class DataSet1 : global::System.Data.DataSet {
        
        private GetAllRegisteredStudentListByHeldInIdDataTable tableGetAllRegisteredStudentListByHeldInId;
        
        private GetSectionCommitteeInformationBySectionIdDataTable tableGetSectionCommitteeInformationBySectionId;
        
        private GetExamMarkDetailsBySectionIdDataTable tableGetExamMarkDetailsBySectionId;
        
        private GetTabulationSheetDataByHeldInIdDataTable tableGetTabulationSheetDataByHeldInId;
        
        private GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId;
        
        private GetAllRollSheetStudentListByHeldInIdDataTable tableGetAllRollSheetStudentListByHeldInId;
        
        private GetAdmitCardDataByHeldInIdDataTable tableGetAdmitCardDataByHeldInId;
        
        private GetContinuousExamMarkDetailsBySectionIdDataTable tableGetContinuousExamMarkDetailsBySectionId;
        
        private GetTopSheetStudentListBySectionIdDataTable tableGetTopSheetStudentListBySectionId;
        
        private GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable tableGetFirstExaminerFinalAssessmentMarkBySectionId;
        
        private GetTabulationSheetDataByHeldInIdNewDataTable tableGetTabulationSheetDataByHeldInIdNew;
        
        private global::System.Data.SchemaSerializationMode _schemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DataSet1() {
            this.BeginInit();
            this.InitClass();
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            base.Relations.CollectionChanged += schemaChangedHandler;
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected DataSet1(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                base(info, context, false) {
            if ((this.IsBinarySerialized(info, context) == true)) {
                this.InitVars(false);
                global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler1 = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
                this.Tables.CollectionChanged += schemaChangedHandler1;
                this.Relations.CollectionChanged += schemaChangedHandler1;
                return;
            }
            string strSchema = ((string)(info.GetValue("XmlSchema", typeof(string))));
            if ((this.DetermineSchemaSerializationMode(info, context) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
                if ((ds.Tables["GetAllRegisteredStudentListByHeldInId"] != null)) {
                    base.Tables.Add(new GetAllRegisteredStudentListByHeldInIdDataTable(ds.Tables["GetAllRegisteredStudentListByHeldInId"]));
                }
                if ((ds.Tables["GetSectionCommitteeInformationBySectionId"] != null)) {
                    base.Tables.Add(new GetSectionCommitteeInformationBySectionIdDataTable(ds.Tables["GetSectionCommitteeInformationBySectionId"]));
                }
                if ((ds.Tables["GetExamMarkDetailsBySectionId"] != null)) {
                    base.Tables.Add(new GetExamMarkDetailsBySectionIdDataTable(ds.Tables["GetExamMarkDetailsBySectionId"]));
                }
                if ((ds.Tables["GetTabulationSheetDataByHeldInId"] != null)) {
                    base.Tables.Add(new GetTabulationSheetDataByHeldInIdDataTable(ds.Tables["GetTabulationSheetDataByHeldInId"]));
                }
                if ((ds.Tables["GetFirstSecondAndThirdExaminerMarkDetailsBySectionId"] != null)) {
                    base.Tables.Add(new GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable(ds.Tables["GetFirstSecondAndThirdExaminerMarkDetailsBySectionId"]));
                }
                if ((ds.Tables["GetAllRollSheetStudentListByHeldInId"] != null)) {
                    base.Tables.Add(new GetAllRollSheetStudentListByHeldInIdDataTable(ds.Tables["GetAllRollSheetStudentListByHeldInId"]));
                }
                if ((ds.Tables["GetAdmitCardDataByHeldInId"] != null)) {
                    base.Tables.Add(new GetAdmitCardDataByHeldInIdDataTable(ds.Tables["GetAdmitCardDataByHeldInId"]));
                }
                if ((ds.Tables["GetContinuousExamMarkDetailsBySectionId"] != null)) {
                    base.Tables.Add(new GetContinuousExamMarkDetailsBySectionIdDataTable(ds.Tables["GetContinuousExamMarkDetailsBySectionId"]));
                }
                if ((ds.Tables["GetTopSheetStudentListBySectionId"] != null)) {
                    base.Tables.Add(new GetTopSheetStudentListBySectionIdDataTable(ds.Tables["GetTopSheetStudentListBySectionId"]));
                }
                if ((ds.Tables["GetFirstExaminerFinalAssessmentMarkBySectionId"] != null)) {
                    base.Tables.Add(new GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable(ds.Tables["GetFirstExaminerFinalAssessmentMarkBySectionId"]));
                }
                if ((ds.Tables["GetTabulationSheetDataByHeldInIdNew"] != null)) {
                    base.Tables.Add(new GetTabulationSheetDataByHeldInIdNewDataTable(ds.Tables["GetTabulationSheetDataByHeldInIdNew"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXmlSchema(new global::System.Xml.XmlTextReader(new global::System.IO.StringReader(strSchema)));
            }
            this.GetSerializationData(info, context);
            global::System.ComponentModel.CollectionChangeEventHandler schemaChangedHandler = new global::System.ComponentModel.CollectionChangeEventHandler(this.SchemaChanged);
            base.Tables.CollectionChanged += schemaChangedHandler;
            this.Relations.CollectionChanged += schemaChangedHandler;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetAllRegisteredStudentListByHeldInIdDataTable GetAllRegisteredStudentListByHeldInId {
            get {
                return this.tableGetAllRegisteredStudentListByHeldInId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetSectionCommitteeInformationBySectionIdDataTable GetSectionCommitteeInformationBySectionId {
            get {
                return this.tableGetSectionCommitteeInformationBySectionId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetExamMarkDetailsBySectionIdDataTable GetExamMarkDetailsBySectionId {
            get {
                return this.tableGetExamMarkDetailsBySectionId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetTabulationSheetDataByHeldInIdDataTable GetTabulationSheetDataByHeldInId {
            get {
                return this.tableGetTabulationSheetDataByHeldInId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable GetFirstSecondAndThirdExaminerMarkDetailsBySectionId {
            get {
                return this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetAllRollSheetStudentListByHeldInIdDataTable GetAllRollSheetStudentListByHeldInId {
            get {
                return this.tableGetAllRollSheetStudentListByHeldInId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetAdmitCardDataByHeldInIdDataTable GetAdmitCardDataByHeldInId {
            get {
                return this.tableGetAdmitCardDataByHeldInId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetContinuousExamMarkDetailsBySectionIdDataTable GetContinuousExamMarkDetailsBySectionId {
            get {
                return this.tableGetContinuousExamMarkDetailsBySectionId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetTopSheetStudentListBySectionIdDataTable GetTopSheetStudentListBySectionId {
            get {
                return this.tableGetTopSheetStudentListBySectionId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable GetFirstExaminerFinalAssessmentMarkBySectionId {
            get {
                return this.tableGetFirstExaminerFinalAssessmentMarkBySectionId;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        [global::System.ComponentModel.DesignerSerializationVisibility(global::System.ComponentModel.DesignerSerializationVisibility.Content)]
        public GetTabulationSheetDataByHeldInIdNewDataTable GetTabulationSheetDataByHeldInIdNew {
            get {
                return this.tableGetTabulationSheetDataByHeldInIdNew;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.BrowsableAttribute(true)]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Visible)]
        public override global::System.Data.SchemaSerializationMode SchemaSerializationMode {
            get {
                return this._schemaSerializationMode;
            }
            set {
                this._schemaSerializationMode = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataTableCollection Tables {
            get {
                return base.Tables;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.DesignerSerializationVisibilityAttribute(global::System.ComponentModel.DesignerSerializationVisibility.Hidden)]
        public new global::System.Data.DataRelationCollection Relations {
            get {
                return base.Relations;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void InitializeDerivedDataSet() {
            this.BeginInit();
            this.InitClass();
            this.EndInit();
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public override global::System.Data.DataSet Clone() {
            DataSet1 cln = ((DataSet1)(base.Clone()));
            cln.InitVars();
            cln.SchemaSerializationMode = this.SchemaSerializationMode;
            return cln;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeTables() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override bool ShouldSerializeRelations() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override void ReadXmlSerializable(global::System.Xml.XmlReader reader) {
            if ((this.DetermineSchemaSerializationMode(reader) == global::System.Data.SchemaSerializationMode.IncludeSchema)) {
                this.Reset();
                global::System.Data.DataSet ds = new global::System.Data.DataSet();
                ds.ReadXml(reader);
                if ((ds.Tables["GetAllRegisteredStudentListByHeldInId"] != null)) {
                    base.Tables.Add(new GetAllRegisteredStudentListByHeldInIdDataTable(ds.Tables["GetAllRegisteredStudentListByHeldInId"]));
                }
                if ((ds.Tables["GetSectionCommitteeInformationBySectionId"] != null)) {
                    base.Tables.Add(new GetSectionCommitteeInformationBySectionIdDataTable(ds.Tables["GetSectionCommitteeInformationBySectionId"]));
                }
                if ((ds.Tables["GetExamMarkDetailsBySectionId"] != null)) {
                    base.Tables.Add(new GetExamMarkDetailsBySectionIdDataTable(ds.Tables["GetExamMarkDetailsBySectionId"]));
                }
                if ((ds.Tables["GetTabulationSheetDataByHeldInId"] != null)) {
                    base.Tables.Add(new GetTabulationSheetDataByHeldInIdDataTable(ds.Tables["GetTabulationSheetDataByHeldInId"]));
                }
                if ((ds.Tables["GetFirstSecondAndThirdExaminerMarkDetailsBySectionId"] != null)) {
                    base.Tables.Add(new GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable(ds.Tables["GetFirstSecondAndThirdExaminerMarkDetailsBySectionId"]));
                }
                if ((ds.Tables["GetAllRollSheetStudentListByHeldInId"] != null)) {
                    base.Tables.Add(new GetAllRollSheetStudentListByHeldInIdDataTable(ds.Tables["GetAllRollSheetStudentListByHeldInId"]));
                }
                if ((ds.Tables["GetAdmitCardDataByHeldInId"] != null)) {
                    base.Tables.Add(new GetAdmitCardDataByHeldInIdDataTable(ds.Tables["GetAdmitCardDataByHeldInId"]));
                }
                if ((ds.Tables["GetContinuousExamMarkDetailsBySectionId"] != null)) {
                    base.Tables.Add(new GetContinuousExamMarkDetailsBySectionIdDataTable(ds.Tables["GetContinuousExamMarkDetailsBySectionId"]));
                }
                if ((ds.Tables["GetTopSheetStudentListBySectionId"] != null)) {
                    base.Tables.Add(new GetTopSheetStudentListBySectionIdDataTable(ds.Tables["GetTopSheetStudentListBySectionId"]));
                }
                if ((ds.Tables["GetFirstExaminerFinalAssessmentMarkBySectionId"] != null)) {
                    base.Tables.Add(new GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable(ds.Tables["GetFirstExaminerFinalAssessmentMarkBySectionId"]));
                }
                if ((ds.Tables["GetTabulationSheetDataByHeldInIdNew"] != null)) {
                    base.Tables.Add(new GetTabulationSheetDataByHeldInIdNewDataTable(ds.Tables["GetTabulationSheetDataByHeldInIdNew"]));
                }
                this.DataSetName = ds.DataSetName;
                this.Prefix = ds.Prefix;
                this.Namespace = ds.Namespace;
                this.Locale = ds.Locale;
                this.CaseSensitive = ds.CaseSensitive;
                this.EnforceConstraints = ds.EnforceConstraints;
                this.Merge(ds, false, global::System.Data.MissingSchemaAction.Add);
                this.InitVars();
            }
            else {
                this.ReadXml(reader);
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected override global::System.Xml.Schema.XmlSchema GetSchemaSerializable() {
            global::System.IO.MemoryStream stream = new global::System.IO.MemoryStream();
            this.WriteXmlSchema(new global::System.Xml.XmlTextWriter(stream, null));
            stream.Position = 0;
            return global::System.Xml.Schema.XmlSchema.Read(new global::System.Xml.XmlTextReader(stream), null);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars() {
            this.InitVars(true);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal void InitVars(bool initTable) {
            this.tableGetAllRegisteredStudentListByHeldInId = ((GetAllRegisteredStudentListByHeldInIdDataTable)(base.Tables["GetAllRegisteredStudentListByHeldInId"]));
            if ((initTable == true)) {
                if ((this.tableGetAllRegisteredStudentListByHeldInId != null)) {
                    this.tableGetAllRegisteredStudentListByHeldInId.InitVars();
                }
            }
            this.tableGetSectionCommitteeInformationBySectionId = ((GetSectionCommitteeInformationBySectionIdDataTable)(base.Tables["GetSectionCommitteeInformationBySectionId"]));
            if ((initTable == true)) {
                if ((this.tableGetSectionCommitteeInformationBySectionId != null)) {
                    this.tableGetSectionCommitteeInformationBySectionId.InitVars();
                }
            }
            this.tableGetExamMarkDetailsBySectionId = ((GetExamMarkDetailsBySectionIdDataTable)(base.Tables["GetExamMarkDetailsBySectionId"]));
            if ((initTable == true)) {
                if ((this.tableGetExamMarkDetailsBySectionId != null)) {
                    this.tableGetExamMarkDetailsBySectionId.InitVars();
                }
            }
            this.tableGetTabulationSheetDataByHeldInId = ((GetTabulationSheetDataByHeldInIdDataTable)(base.Tables["GetTabulationSheetDataByHeldInId"]));
            if ((initTable == true)) {
                if ((this.tableGetTabulationSheetDataByHeldInId != null)) {
                    this.tableGetTabulationSheetDataByHeldInId.InitVars();
                }
            }
            this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId = ((GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable)(base.Tables["GetFirstSecondAndThirdExaminerMarkDetailsBySectionId"]));
            if ((initTable == true)) {
                if ((this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId != null)) {
                    this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.InitVars();
                }
            }
            this.tableGetAllRollSheetStudentListByHeldInId = ((GetAllRollSheetStudentListByHeldInIdDataTable)(base.Tables["GetAllRollSheetStudentListByHeldInId"]));
            if ((initTable == true)) {
                if ((this.tableGetAllRollSheetStudentListByHeldInId != null)) {
                    this.tableGetAllRollSheetStudentListByHeldInId.InitVars();
                }
            }
            this.tableGetAdmitCardDataByHeldInId = ((GetAdmitCardDataByHeldInIdDataTable)(base.Tables["GetAdmitCardDataByHeldInId"]));
            if ((initTable == true)) {
                if ((this.tableGetAdmitCardDataByHeldInId != null)) {
                    this.tableGetAdmitCardDataByHeldInId.InitVars();
                }
            }
            this.tableGetContinuousExamMarkDetailsBySectionId = ((GetContinuousExamMarkDetailsBySectionIdDataTable)(base.Tables["GetContinuousExamMarkDetailsBySectionId"]));
            if ((initTable == true)) {
                if ((this.tableGetContinuousExamMarkDetailsBySectionId != null)) {
                    this.tableGetContinuousExamMarkDetailsBySectionId.InitVars();
                }
            }
            this.tableGetTopSheetStudentListBySectionId = ((GetTopSheetStudentListBySectionIdDataTable)(base.Tables["GetTopSheetStudentListBySectionId"]));
            if ((initTable == true)) {
                if ((this.tableGetTopSheetStudentListBySectionId != null)) {
                    this.tableGetTopSheetStudentListBySectionId.InitVars();
                }
            }
            this.tableGetFirstExaminerFinalAssessmentMarkBySectionId = ((GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable)(base.Tables["GetFirstExaminerFinalAssessmentMarkBySectionId"]));
            if ((initTable == true)) {
                if ((this.tableGetFirstExaminerFinalAssessmentMarkBySectionId != null)) {
                    this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.InitVars();
                }
            }
            this.tableGetTabulationSheetDataByHeldInIdNew = ((GetTabulationSheetDataByHeldInIdNewDataTable)(base.Tables["GetTabulationSheetDataByHeldInIdNew"]));
            if ((initTable == true)) {
                if ((this.tableGetTabulationSheetDataByHeldInIdNew != null)) {
                    this.tableGetTabulationSheetDataByHeldInIdNew.InitVars();
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitClass() {
            this.DataSetName = "DataSet1";
            this.Prefix = "";
            this.Namespace = "http://tempuri.org/DataSet1.xsd";
            this.EnforceConstraints = true;
            this.SchemaSerializationMode = global::System.Data.SchemaSerializationMode.IncludeSchema;
            this.tableGetAllRegisteredStudentListByHeldInId = new GetAllRegisteredStudentListByHeldInIdDataTable();
            base.Tables.Add(this.tableGetAllRegisteredStudentListByHeldInId);
            this.tableGetSectionCommitteeInformationBySectionId = new GetSectionCommitteeInformationBySectionIdDataTable();
            base.Tables.Add(this.tableGetSectionCommitteeInformationBySectionId);
            this.tableGetExamMarkDetailsBySectionId = new GetExamMarkDetailsBySectionIdDataTable();
            base.Tables.Add(this.tableGetExamMarkDetailsBySectionId);
            this.tableGetTabulationSheetDataByHeldInId = new GetTabulationSheetDataByHeldInIdDataTable();
            base.Tables.Add(this.tableGetTabulationSheetDataByHeldInId);
            this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId = new GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable();
            base.Tables.Add(this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId);
            this.tableGetAllRollSheetStudentListByHeldInId = new GetAllRollSheetStudentListByHeldInIdDataTable();
            base.Tables.Add(this.tableGetAllRollSheetStudentListByHeldInId);
            this.tableGetAdmitCardDataByHeldInId = new GetAdmitCardDataByHeldInIdDataTable();
            base.Tables.Add(this.tableGetAdmitCardDataByHeldInId);
            this.tableGetContinuousExamMarkDetailsBySectionId = new GetContinuousExamMarkDetailsBySectionIdDataTable();
            base.Tables.Add(this.tableGetContinuousExamMarkDetailsBySectionId);
            this.tableGetTopSheetStudentListBySectionId = new GetTopSheetStudentListBySectionIdDataTable();
            base.Tables.Add(this.tableGetTopSheetStudentListBySectionId);
            this.tableGetFirstExaminerFinalAssessmentMarkBySectionId = new GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable();
            base.Tables.Add(this.tableGetFirstExaminerFinalAssessmentMarkBySectionId);
            this.tableGetTabulationSheetDataByHeldInIdNew = new GetTabulationSheetDataByHeldInIdNewDataTable();
            base.Tables.Add(this.tableGetTabulationSheetDataByHeldInIdNew);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetAllRegisteredStudentListByHeldInId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetSectionCommitteeInformationBySectionId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetExamMarkDetailsBySectionId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetTabulationSheetDataByHeldInId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetFirstSecondAndThirdExaminerMarkDetailsBySectionId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetAllRollSheetStudentListByHeldInId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetAdmitCardDataByHeldInId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetContinuousExamMarkDetailsBySectionId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetTopSheetStudentListBySectionId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetFirstExaminerFinalAssessmentMarkBySectionId() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private bool ShouldSerializeGetTabulationSheetDataByHeldInIdNew() {
            return false;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void SchemaChanged(object sender, global::System.ComponentModel.CollectionChangeEventArgs e) {
            if ((e.Action == global::System.ComponentModel.CollectionChangeAction.Remove)) {
                this.InitVars();
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedDataSetSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
            DataSet1 ds = new DataSet1();
            global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
            global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
            global::System.Xml.Schema.XmlSchemaAny any = new global::System.Xml.Schema.XmlSchemaAny();
            any.Namespace = ds.Namespace;
            sequence.Items.Add(any);
            type.Particle = sequence;
            global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
            if (xs.Contains(dsSchema.TargetNamespace)) {
                global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                try {
                    global::System.Xml.Schema.XmlSchema schema = null;
                    dsSchema.Write(s1);
                    for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                        schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                        s2.SetLength(0);
                        schema.Write(s2);
                        if ((s1.Length == s2.Length)) {
                            s1.Position = 0;
                            s2.Position = 0;
                            for (; ((s1.Position != s1.Length) 
                                        && (s1.ReadByte() == s2.ReadByte())); ) {
                                ;
                            }
                            if ((s1.Position == s1.Length)) {
                                return type;
                            }
                        }
                    }
                }
                finally {
                    if ((s1 != null)) {
                        s1.Close();
                    }
                    if ((s2 != null)) {
                        s2.Close();
                    }
                }
            }
            xs.Add(dsSchema);
            return type;
        }
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetAllRegisteredStudentListByHeldInIdRowChangeEventHandler(object sender, GetAllRegisteredStudentListByHeldInIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetSectionCommitteeInformationBySectionIdRowChangeEventHandler(object sender, GetSectionCommitteeInformationBySectionIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetExamMarkDetailsBySectionIdRowChangeEventHandler(object sender, GetExamMarkDetailsBySectionIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetTabulationSheetDataByHeldInIdRowChangeEventHandler(object sender, GetTabulationSheetDataByHeldInIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEventHandler(object sender, GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetAllRollSheetStudentListByHeldInIdRowChangeEventHandler(object sender, GetAllRollSheetStudentListByHeldInIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetAdmitCardDataByHeldInIdRowChangeEventHandler(object sender, GetAdmitCardDataByHeldInIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetContinuousExamMarkDetailsBySectionIdRowChangeEventHandler(object sender, GetContinuousExamMarkDetailsBySectionIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetTopSheetStudentListBySectionIdRowChangeEventHandler(object sender, GetTopSheetStudentListBySectionIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEventHandler(object sender, GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEvent e);
        
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public delegate void GetTabulationSheetDataByHeldInIdNewRowChangeEventHandler(object sender, GetTabulationSheetDataByHeldInIdNewRowChangeEvent e);
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetAllRegisteredStudentListByHeldInIdDataTable : global::System.Data.TypedTableBase<GetAllRegisteredStudentListByHeldInIdRow> {
            
            private global::System.Data.DataColumn columnShortName;
            
            private global::System.Data.DataColumn columnAdmissionSession;
            
            private global::System.Data.DataColumn columnRoll;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnFormalCode;
            
            private global::System.Data.DataColumn columnVersionCode;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnCourseCredit;
            
            private global::System.Data.DataColumn columnSectionName;
            
            private global::System.Data.DataColumn columnRetakeNo;
            
            private global::System.Data.DataColumn columnCourseType;
            
            private global::System.Data.DataColumn columnStudentType;
            
            private global::System.Data.DataColumn columnHallCode;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRegisteredStudentListByHeldInIdDataTable() {
                this.TableName = "GetAllRegisteredStudentListByHeldInId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetAllRegisteredStudentListByHeldInIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetAllRegisteredStudentListByHeldInIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortNameColumn {
                get {
                    return this.columnShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdmissionSessionColumn {
                get {
                    return this.columnAdmissionSession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RollColumn {
                get {
                    return this.columnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormalCodeColumn {
                get {
                    return this.columnFormalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionCodeColumn {
                get {
                    return this.columnVersionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourseCreditColumn {
                get {
                    return this.columnCourseCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SectionNameColumn {
                get {
                    return this.columnSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetakeNoColumn {
                get {
                    return this.columnRetakeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourseTypeColumn {
                get {
                    return this.columnCourseType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StudentTypeColumn {
                get {
                    return this.columnStudentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HallCodeColumn {
                get {
                    return this.columnHallCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRegisteredStudentListByHeldInIdRow this[int index] {
                get {
                    return ((GetAllRegisteredStudentListByHeldInIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAllRegisteredStudentListByHeldInIdRowChangeEventHandler GetAllRegisteredStudentListByHeldInIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAllRegisteredStudentListByHeldInIdRowChangeEventHandler GetAllRegisteredStudentListByHeldInIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAllRegisteredStudentListByHeldInIdRowChangeEventHandler GetAllRegisteredStudentListByHeldInIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAllRegisteredStudentListByHeldInIdRowChangeEventHandler GetAllRegisteredStudentListByHeldInIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetAllRegisteredStudentListByHeldInIdRow(GetAllRegisteredStudentListByHeldInIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRegisteredStudentListByHeldInIdRow AddGetAllRegisteredStudentListByHeldInIdRow(string ShortName, string AdmissionSession, string Roll, string FullName, string FormalCode, string VersionCode, string Title, decimal CourseCredit, string SectionName, int RetakeNo, string CourseType, string StudentType, string HallCode) {
                GetAllRegisteredStudentListByHeldInIdRow rowGetAllRegisteredStudentListByHeldInIdRow = ((GetAllRegisteredStudentListByHeldInIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ShortName,
                        AdmissionSession,
                        Roll,
                        FullName,
                        FormalCode,
                        VersionCode,
                        Title,
                        CourseCredit,
                        SectionName,
                        RetakeNo,
                        CourseType,
                        StudentType,
                        HallCode};
                rowGetAllRegisteredStudentListByHeldInIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetAllRegisteredStudentListByHeldInIdRow);
                return rowGetAllRegisteredStudentListByHeldInIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetAllRegisteredStudentListByHeldInIdDataTable cln = ((GetAllRegisteredStudentListByHeldInIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetAllRegisteredStudentListByHeldInIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnShortName = base.Columns["ShortName"];
                this.columnAdmissionSession = base.Columns["AdmissionSession"];
                this.columnRoll = base.Columns["Roll"];
                this.columnFullName = base.Columns["FullName"];
                this.columnFormalCode = base.Columns["FormalCode"];
                this.columnVersionCode = base.Columns["VersionCode"];
                this.columnTitle = base.Columns["Title"];
                this.columnCourseCredit = base.Columns["CourseCredit"];
                this.columnSectionName = base.Columns["SectionName"];
                this.columnRetakeNo = base.Columns["RetakeNo"];
                this.columnCourseType = base.Columns["CourseType"];
                this.columnStudentType = base.Columns["StudentType"];
                this.columnHallCode = base.Columns["HallCode"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnShortName = new global::System.Data.DataColumn("ShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortName);
                this.columnAdmissionSession = new global::System.Data.DataColumn("AdmissionSession", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmissionSession);
                this.columnRoll = new global::System.Data.DataColumn("Roll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnFormalCode = new global::System.Data.DataColumn("FormalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormalCode);
                this.columnVersionCode = new global::System.Data.DataColumn("VersionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionCode);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnCourseCredit = new global::System.Data.DataColumn("CourseCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourseCredit);
                this.columnSectionName = new global::System.Data.DataColumn("SectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionName);
                this.columnRetakeNo = new global::System.Data.DataColumn("RetakeNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetakeNo);
                this.columnCourseType = new global::System.Data.DataColumn("CourseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourseType);
                this.columnStudentType = new global::System.Data.DataColumn("StudentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentType);
                this.columnHallCode = new global::System.Data.DataColumn("HallCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHallCode);
                this.columnShortName.MaxLength = 100;
                this.columnAdmissionSession.AllowDBNull = false;
                this.columnAdmissionSession.ReadOnly = true;
                this.columnAdmissionSession.MaxLength = 15;
                this.columnRoll.MaxLength = 2147483647;
                this.columnFullName.MaxLength = 2147483647;
                this.columnFormalCode.MaxLength = 50;
                this.columnVersionCode.MaxLength = 50;
                this.columnTitle.MaxLength = 150;
                this.columnCourseCredit.AllowDBNull = false;
                this.columnSectionName.MaxLength = 250;
                this.columnRetakeNo.AllowDBNull = false;
                this.columnRetakeNo.ReadOnly = true;
                this.columnCourseType.AllowDBNull = false;
                this.columnCourseType.ReadOnly = true;
                this.columnCourseType.MaxLength = 14;
                this.columnStudentType.MaxLength = 2147483647;
                this.columnHallCode.AllowDBNull = false;
                this.columnHallCode.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRegisteredStudentListByHeldInIdRow NewGetAllRegisteredStudentListByHeldInIdRow() {
                return ((GetAllRegisteredStudentListByHeldInIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetAllRegisteredStudentListByHeldInIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetAllRegisteredStudentListByHeldInIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetAllRegisteredStudentListByHeldInIdRowChanged != null)) {
                    this.GetAllRegisteredStudentListByHeldInIdRowChanged(this, new GetAllRegisteredStudentListByHeldInIdRowChangeEvent(((GetAllRegisteredStudentListByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetAllRegisteredStudentListByHeldInIdRowChanging != null)) {
                    this.GetAllRegisteredStudentListByHeldInIdRowChanging(this, new GetAllRegisteredStudentListByHeldInIdRowChangeEvent(((GetAllRegisteredStudentListByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetAllRegisteredStudentListByHeldInIdRowDeleted != null)) {
                    this.GetAllRegisteredStudentListByHeldInIdRowDeleted(this, new GetAllRegisteredStudentListByHeldInIdRowChangeEvent(((GetAllRegisteredStudentListByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetAllRegisteredStudentListByHeldInIdRowDeleting != null)) {
                    this.GetAllRegisteredStudentListByHeldInIdRowDeleting(this, new GetAllRegisteredStudentListByHeldInIdRowChangeEvent(((GetAllRegisteredStudentListByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetAllRegisteredStudentListByHeldInIdRow(GetAllRegisteredStudentListByHeldInIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetAllRegisteredStudentListByHeldInIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetSectionCommitteeInformationBySectionIdDataTable : global::System.Data.TypedTableBase<GetSectionCommitteeInformationBySectionIdRow> {
            
            private global::System.Data.DataColumn columnAcaCal_SectionID;
            
            private global::System.Data.DataColumn columnFormalCode;
            
            private global::System.Data.DataColumn columnVersionCode;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnCredits;
            
            private global::System.Data.DataColumn columnSectionName;
            
            private global::System.Data.DataColumn columnHeldInRelationId;
            
            private global::System.Data.DataColumn columnTypeDefinitionID;
            
            private global::System.Data.DataColumn columnChairman;
            
            private global::System.Data.DataColumn columnChairmanBangla;
            
            private global::System.Data.DataColumn columnChairmanEnglish;
            
            private global::System.Data.DataColumn columnEx1Code;
            
            private global::System.Data.DataColumn columnEx1BanglaName;
            
            private global::System.Data.DataColumn columnEx1English;
            
            private global::System.Data.DataColumn columnEx2Code;
            
            private global::System.Data.DataColumn columnEx2BanglaName;
            
            private global::System.Data.DataColumn columnEx2English;
            
            private global::System.Data.DataColumn columnExternalName;
            
            private global::System.Data.DataColumn columnCTCode;
            
            private global::System.Data.DataColumn columnCTBanglaName;
            
            private global::System.Data.DataColumn columnCTEnglish;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetSectionCommitteeInformationBySectionIdDataTable() {
                this.TableName = "GetSectionCommitteeInformationBySectionId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetSectionCommitteeInformationBySectionIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetSectionCommitteeInformationBySectionIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AcaCal_SectionIDColumn {
                get {
                    return this.columnAcaCal_SectionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormalCodeColumn {
                get {
                    return this.columnFormalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionCodeColumn {
                get {
                    return this.columnVersionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditsColumn {
                get {
                    return this.columnCredits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SectionNameColumn {
                get {
                    return this.columnSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HeldInRelationIdColumn {
                get {
                    return this.columnHeldInRelationId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TypeDefinitionIDColumn {
                get {
                    return this.columnTypeDefinitionID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChairmanColumn {
                get {
                    return this.columnChairman;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChairmanBanglaColumn {
                get {
                    return this.columnChairmanBangla;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ChairmanEnglishColumn {
                get {
                    return this.columnChairmanEnglish;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ex1CodeColumn {
                get {
                    return this.columnEx1Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ex1BanglaNameColumn {
                get {
                    return this.columnEx1BanglaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ex1EnglishColumn {
                get {
                    return this.columnEx1English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ex2CodeColumn {
                get {
                    return this.columnEx2Code;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ex2BanglaNameColumn {
                get {
                    return this.columnEx2BanglaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn Ex2EnglishColumn {
                get {
                    return this.columnEx2English;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExternalNameColumn {
                get {
                    return this.columnExternalName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CTCodeColumn {
                get {
                    return this.columnCTCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CTBanglaNameColumn {
                get {
                    return this.columnCTBanglaName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CTEnglishColumn {
                get {
                    return this.columnCTEnglish;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetSectionCommitteeInformationBySectionIdRow this[int index] {
                get {
                    return ((GetSectionCommitteeInformationBySectionIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetSectionCommitteeInformationBySectionIdRowChangeEventHandler GetSectionCommitteeInformationBySectionIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetSectionCommitteeInformationBySectionIdRowChangeEventHandler GetSectionCommitteeInformationBySectionIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetSectionCommitteeInformationBySectionIdRowChangeEventHandler GetSectionCommitteeInformationBySectionIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetSectionCommitteeInformationBySectionIdRowChangeEventHandler GetSectionCommitteeInformationBySectionIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetSectionCommitteeInformationBySectionIdRow(GetSectionCommitteeInformationBySectionIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetSectionCommitteeInformationBySectionIdRow AddGetSectionCommitteeInformationBySectionIdRow(
                        string FormalCode, 
                        string VersionCode, 
                        string Title, 
                        decimal Credits, 
                        string SectionName, 
                        int HeldInRelationId, 
                        int TypeDefinitionID, 
                        string Chairman, 
                        string ChairmanBangla, 
                        string ChairmanEnglish, 
                        string Ex1Code, 
                        string Ex1BanglaName, 
                        string Ex1English, 
                        string Ex2Code, 
                        string Ex2BanglaName, 
                        string Ex2English, 
                        string ExternalName, 
                        string CTCode, 
                        string CTBanglaName, 
                        string CTEnglish) {
                GetSectionCommitteeInformationBySectionIdRow rowGetSectionCommitteeInformationBySectionIdRow = ((GetSectionCommitteeInformationBySectionIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        null,
                        FormalCode,
                        VersionCode,
                        Title,
                        Credits,
                        SectionName,
                        HeldInRelationId,
                        TypeDefinitionID,
                        Chairman,
                        ChairmanBangla,
                        ChairmanEnglish,
                        Ex1Code,
                        Ex1BanglaName,
                        Ex1English,
                        Ex2Code,
                        Ex2BanglaName,
                        Ex2English,
                        ExternalName,
                        CTCode,
                        CTBanglaName,
                        CTEnglish};
                rowGetSectionCommitteeInformationBySectionIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetSectionCommitteeInformationBySectionIdRow);
                return rowGetSectionCommitteeInformationBySectionIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetSectionCommitteeInformationBySectionIdRow FindByAcaCal_SectionID(int AcaCal_SectionID) {
                return ((GetSectionCommitteeInformationBySectionIdRow)(this.Rows.Find(new object[] {
                            AcaCal_SectionID})));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetSectionCommitteeInformationBySectionIdDataTable cln = ((GetSectionCommitteeInformationBySectionIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetSectionCommitteeInformationBySectionIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnAcaCal_SectionID = base.Columns["AcaCal_SectionID"];
                this.columnFormalCode = base.Columns["FormalCode"];
                this.columnVersionCode = base.Columns["VersionCode"];
                this.columnTitle = base.Columns["Title"];
                this.columnCredits = base.Columns["Credits"];
                this.columnSectionName = base.Columns["SectionName"];
                this.columnHeldInRelationId = base.Columns["HeldInRelationId"];
                this.columnTypeDefinitionID = base.Columns["TypeDefinitionID"];
                this.columnChairman = base.Columns["Chairman"];
                this.columnChairmanBangla = base.Columns["ChairmanBangla"];
                this.columnChairmanEnglish = base.Columns["ChairmanEnglish"];
                this.columnEx1Code = base.Columns["Ex1Code"];
                this.columnEx1BanglaName = base.Columns["Ex1BanglaName"];
                this.columnEx1English = base.Columns["Ex1English"];
                this.columnEx2Code = base.Columns["Ex2Code"];
                this.columnEx2BanglaName = base.Columns["Ex2BanglaName"];
                this.columnEx2English = base.Columns["Ex2English"];
                this.columnExternalName = base.Columns["ExternalName"];
                this.columnCTCode = base.Columns["CTCode"];
                this.columnCTBanglaName = base.Columns["CTBanglaName"];
                this.columnCTEnglish = base.Columns["CTEnglish"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnAcaCal_SectionID = new global::System.Data.DataColumn("AcaCal_SectionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAcaCal_SectionID);
                this.columnFormalCode = new global::System.Data.DataColumn("FormalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormalCode);
                this.columnVersionCode = new global::System.Data.DataColumn("VersionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionCode);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnCredits = new global::System.Data.DataColumn("Credits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredits);
                this.columnSectionName = new global::System.Data.DataColumn("SectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionName);
                this.columnHeldInRelationId = new global::System.Data.DataColumn("HeldInRelationId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHeldInRelationId);
                this.columnTypeDefinitionID = new global::System.Data.DataColumn("TypeDefinitionID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTypeDefinitionID);
                this.columnChairman = new global::System.Data.DataColumn("Chairman", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChairman);
                this.columnChairmanBangla = new global::System.Data.DataColumn("ChairmanBangla", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChairmanBangla);
                this.columnChairmanEnglish = new global::System.Data.DataColumn("ChairmanEnglish", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnChairmanEnglish);
                this.columnEx1Code = new global::System.Data.DataColumn("Ex1Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEx1Code);
                this.columnEx1BanglaName = new global::System.Data.DataColumn("Ex1BanglaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEx1BanglaName);
                this.columnEx1English = new global::System.Data.DataColumn("Ex1English", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEx1English);
                this.columnEx2Code = new global::System.Data.DataColumn("Ex2Code", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEx2Code);
                this.columnEx2BanglaName = new global::System.Data.DataColumn("Ex2BanglaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEx2BanglaName);
                this.columnEx2English = new global::System.Data.DataColumn("Ex2English", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnEx2English);
                this.columnExternalName = new global::System.Data.DataColumn("ExternalName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExternalName);
                this.columnCTCode = new global::System.Data.DataColumn("CTCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTCode);
                this.columnCTBanglaName = new global::System.Data.DataColumn("CTBanglaName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTBanglaName);
                this.columnCTEnglish = new global::System.Data.DataColumn("CTEnglish", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCTEnglish);
                this.Constraints.Add(new global::System.Data.UniqueConstraint("Constraint1", new global::System.Data.DataColumn[] {
                                this.columnAcaCal_SectionID}, true));
                this.columnAcaCal_SectionID.AutoIncrement = true;
                this.columnAcaCal_SectionID.AutoIncrementSeed = -1;
                this.columnAcaCal_SectionID.AutoIncrementStep = -1;
                this.columnAcaCal_SectionID.AllowDBNull = false;
                this.columnAcaCal_SectionID.ReadOnly = true;
                this.columnAcaCal_SectionID.Unique = true;
                this.columnFormalCode.MaxLength = 50;
                this.columnVersionCode.MaxLength = 50;
                this.columnTitle.MaxLength = 150;
                this.columnSectionName.AllowDBNull = false;
                this.columnSectionName.MaxLength = 250;
                this.columnChairman.MaxLength = 100;
                this.columnChairmanBangla.MaxLength = 2147483647;
                this.columnChairmanEnglish.MaxLength = 2147483647;
                this.columnEx1Code.MaxLength = 100;
                this.columnEx1BanglaName.MaxLength = 2147483647;
                this.columnEx1English.MaxLength = 2147483647;
                this.columnEx2Code.MaxLength = 100;
                this.columnEx2BanglaName.MaxLength = 2147483647;
                this.columnEx2English.MaxLength = 2147483647;
                this.columnExternalName.MaxLength = 2147483647;
                this.columnCTCode.MaxLength = 100;
                this.columnCTBanglaName.MaxLength = 2147483647;
                this.columnCTEnglish.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetSectionCommitteeInformationBySectionIdRow NewGetSectionCommitteeInformationBySectionIdRow() {
                return ((GetSectionCommitteeInformationBySectionIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetSectionCommitteeInformationBySectionIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetSectionCommitteeInformationBySectionIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetSectionCommitteeInformationBySectionIdRowChanged != null)) {
                    this.GetSectionCommitteeInformationBySectionIdRowChanged(this, new GetSectionCommitteeInformationBySectionIdRowChangeEvent(((GetSectionCommitteeInformationBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetSectionCommitteeInformationBySectionIdRowChanging != null)) {
                    this.GetSectionCommitteeInformationBySectionIdRowChanging(this, new GetSectionCommitteeInformationBySectionIdRowChangeEvent(((GetSectionCommitteeInformationBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetSectionCommitteeInformationBySectionIdRowDeleted != null)) {
                    this.GetSectionCommitteeInformationBySectionIdRowDeleted(this, new GetSectionCommitteeInformationBySectionIdRowChangeEvent(((GetSectionCommitteeInformationBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetSectionCommitteeInformationBySectionIdRowDeleting != null)) {
                    this.GetSectionCommitteeInformationBySectionIdRowDeleting(this, new GetSectionCommitteeInformationBySectionIdRowChangeEvent(((GetSectionCommitteeInformationBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetSectionCommitteeInformationBySectionIdRow(GetSectionCommitteeInformationBySectionIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetSectionCommitteeInformationBySectionIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetExamMarkDetailsBySectionIdDataTable : global::System.Data.TypedTableBase<GetExamMarkDetailsBySectionIdRow> {
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnRoll;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnCourseCredit;
            
            private global::System.Data.DataColumn columnExamMarkDetailId;
            
            private global::System.Data.DataColumn columnMarks;
            
            private global::System.Data.DataColumn columnExamTemplateItemId;
            
            private global::System.Data.DataColumn columnColumnSequence;
            
            private global::System.Data.DataColumn columnExamName;
            
            private global::System.Data.DataColumn columnExamMark;
            
            private global::System.Data.DataColumn columnObtainedMark;
            
            private global::System.Data.DataColumn columnPublishGrade;
            
            private global::System.Data.DataColumn columnExamType;
            
            private global::System.Data.DataColumn columnObtainedGrade;
            
            private global::System.Data.DataColumn columnGradePoint;
            
            private global::System.Data.DataColumn columnPointSecured;
            
            private global::System.Data.DataColumn columnTotalMark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetExamMarkDetailsBySectionIdDataTable() {
                this.TableName = "GetExamMarkDetailsBySectionId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetExamMarkDetailsBySectionIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetExamMarkDetailsBySectionIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RollColumn {
                get {
                    return this.columnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourseCreditColumn {
                get {
                    return this.columnCourseCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamMarkDetailIdColumn {
                get {
                    return this.columnExamMarkDetailId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarksColumn {
                get {
                    return this.columnMarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamTemplateItemIdColumn {
                get {
                    return this.columnExamTemplateItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColumnSequenceColumn {
                get {
                    return this.columnColumnSequence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamNameColumn {
                get {
                    return this.columnExamName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamMarkColumn {
                get {
                    return this.columnExamMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObtainedMarkColumn {
                get {
                    return this.columnObtainedMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublishGradeColumn {
                get {
                    return this.columnPublishGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamTypeColumn {
                get {
                    return this.columnExamType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObtainedGradeColumn {
                get {
                    return this.columnObtainedGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GradePointColumn {
                get {
                    return this.columnGradePoint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PointSecuredColumn {
                get {
                    return this.columnPointSecured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalMarkColumn {
                get {
                    return this.columnTotalMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetExamMarkDetailsBySectionIdRow this[int index] {
                get {
                    return ((GetExamMarkDetailsBySectionIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetExamMarkDetailsBySectionIdRowChangeEventHandler GetExamMarkDetailsBySectionIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetExamMarkDetailsBySectionIdRowChangeEventHandler GetExamMarkDetailsBySectionIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetExamMarkDetailsBySectionIdRowChangeEventHandler GetExamMarkDetailsBySectionIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetExamMarkDetailsBySectionIdRowChangeEventHandler GetExamMarkDetailsBySectionIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetExamMarkDetailsBySectionIdRow(GetExamMarkDetailsBySectionIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetExamMarkDetailsBySectionIdRow AddGetExamMarkDetailsBySectionIdRow(
                        int StudentID, 
                        string Roll, 
                        string FullName, 
                        decimal CourseCredit, 
                        int ExamMarkDetailId, 
                        decimal Marks, 
                        int ExamTemplateItemId, 
                        int ColumnSequence, 
                        string ExamName, 
                        decimal ExamMark, 
                        decimal ObtainedMark, 
                        string PublishGrade, 
                        string ExamType, 
                        string ObtainedGrade, 
                        decimal GradePoint, 
                        decimal PointSecured, 
                        decimal TotalMark) {
                GetExamMarkDetailsBySectionIdRow rowGetExamMarkDetailsBySectionIdRow = ((GetExamMarkDetailsBySectionIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StudentID,
                        Roll,
                        FullName,
                        CourseCredit,
                        ExamMarkDetailId,
                        Marks,
                        ExamTemplateItemId,
                        ColumnSequence,
                        ExamName,
                        ExamMark,
                        ObtainedMark,
                        PublishGrade,
                        ExamType,
                        ObtainedGrade,
                        GradePoint,
                        PointSecured,
                        TotalMark};
                rowGetExamMarkDetailsBySectionIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetExamMarkDetailsBySectionIdRow);
                return rowGetExamMarkDetailsBySectionIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetExamMarkDetailsBySectionIdDataTable cln = ((GetExamMarkDetailsBySectionIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetExamMarkDetailsBySectionIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStudentID = base.Columns["StudentID"];
                this.columnRoll = base.Columns["Roll"];
                this.columnFullName = base.Columns["FullName"];
                this.columnCourseCredit = base.Columns["CourseCredit"];
                this.columnExamMarkDetailId = base.Columns["ExamMarkDetailId"];
                this.columnMarks = base.Columns["Marks"];
                this.columnExamTemplateItemId = base.Columns["ExamTemplateItemId"];
                this.columnColumnSequence = base.Columns["ColumnSequence"];
                this.columnExamName = base.Columns["ExamName"];
                this.columnExamMark = base.Columns["ExamMark"];
                this.columnObtainedMark = base.Columns["ObtainedMark"];
                this.columnPublishGrade = base.Columns["PublishGrade"];
                this.columnExamType = base.Columns["ExamType"];
                this.columnObtainedGrade = base.Columns["ObtainedGrade"];
                this.columnGradePoint = base.Columns["GradePoint"];
                this.columnPointSecured = base.Columns["PointSecured"];
                this.columnTotalMark = base.Columns["TotalMark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnRoll = new global::System.Data.DataColumn("Roll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnCourseCredit = new global::System.Data.DataColumn("CourseCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourseCredit);
                this.columnExamMarkDetailId = new global::System.Data.DataColumn("ExamMarkDetailId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamMarkDetailId);
                this.columnMarks = new global::System.Data.DataColumn("Marks", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarks);
                this.columnExamTemplateItemId = new global::System.Data.DataColumn("ExamTemplateItemId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamTemplateItemId);
                this.columnColumnSequence = new global::System.Data.DataColumn("ColumnSequence", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnSequence);
                this.columnExamName = new global::System.Data.DataColumn("ExamName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamName);
                this.columnExamMark = new global::System.Data.DataColumn("ExamMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamMark);
                this.columnObtainedMark = new global::System.Data.DataColumn("ObtainedMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObtainedMark);
                this.columnPublishGrade = new global::System.Data.DataColumn("PublishGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublishGrade);
                this.columnExamType = new global::System.Data.DataColumn("ExamType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamType);
                this.columnObtainedGrade = new global::System.Data.DataColumn("ObtainedGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObtainedGrade);
                this.columnGradePoint = new global::System.Data.DataColumn("GradePoint", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGradePoint);
                this.columnPointSecured = new global::System.Data.DataColumn("PointSecured", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointSecured);
                this.columnTotalMark = new global::System.Data.DataColumn("TotalMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMark);
                this.columnRoll.MaxLength = 2147483647;
                this.columnFullName.MaxLength = 2147483647;
                this.columnCourseCredit.AllowDBNull = false;
                this.columnExamTemplateItemId.AllowDBNull = false;
                this.columnColumnSequence.AllowDBNull = false;
                this.columnExamName.MaxLength = 250;
                this.columnPublishGrade.MaxLength = 2147483647;
                this.columnExamType.AllowDBNull = false;
                this.columnExamType.MaxLength = 50;
                this.columnObtainedGrade.ReadOnly = true;
                this.columnObtainedGrade.MaxLength = 2147483647;
                this.columnGradePoint.ReadOnly = true;
                this.columnPointSecured.ReadOnly = true;
                this.columnTotalMark.ReadOnly = true;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetExamMarkDetailsBySectionIdRow NewGetExamMarkDetailsBySectionIdRow() {
                return ((GetExamMarkDetailsBySectionIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetExamMarkDetailsBySectionIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetExamMarkDetailsBySectionIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetExamMarkDetailsBySectionIdRowChanged != null)) {
                    this.GetExamMarkDetailsBySectionIdRowChanged(this, new GetExamMarkDetailsBySectionIdRowChangeEvent(((GetExamMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetExamMarkDetailsBySectionIdRowChanging != null)) {
                    this.GetExamMarkDetailsBySectionIdRowChanging(this, new GetExamMarkDetailsBySectionIdRowChangeEvent(((GetExamMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetExamMarkDetailsBySectionIdRowDeleted != null)) {
                    this.GetExamMarkDetailsBySectionIdRowDeleted(this, new GetExamMarkDetailsBySectionIdRowChangeEvent(((GetExamMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetExamMarkDetailsBySectionIdRowDeleting != null)) {
                    this.GetExamMarkDetailsBySectionIdRowDeleting(this, new GetExamMarkDetailsBySectionIdRowChangeEvent(((GetExamMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetExamMarkDetailsBySectionIdRow(GetExamMarkDetailsBySectionIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetExamMarkDetailsBySectionIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetTabulationSheetDataByHeldInIdDataTable : global::System.Data.TypedTableBase<GetTabulationSheetDataByHeldInIdRow> {
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnRoll;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnFormalCode;
            
            private global::System.Data.DataColumn columnVersionCode;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnCourseCredit;
            
            private global::System.Data.DataColumn columnObtainedTotalMarks;
            
            private global::System.Data.DataColumn columnObtainedGrade;
            
            private global::System.Data.DataColumn columnObtainedGPA;
            
            private global::System.Data.DataColumn columnPointSecured;
            
            private global::System.Data.DataColumn columnTotalPointSecured;
            
            private global::System.Data.DataColumn columnCreditTaken;
            
            private global::System.Data.DataColumn columnCreditEarned;
            
            private global::System.Data.DataColumn columnGPA;
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnHall;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdDataTable() {
                this.TableName = "GetTabulationSheetDataByHeldInId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetTabulationSheetDataByHeldInIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetTabulationSheetDataByHeldInIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RollColumn {
                get {
                    return this.columnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormalCodeColumn {
                get {
                    return this.columnFormalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionCodeColumn {
                get {
                    return this.columnVersionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourseCreditColumn {
                get {
                    return this.columnCourseCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObtainedTotalMarksColumn {
                get {
                    return this.columnObtainedTotalMarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObtainedGradeColumn {
                get {
                    return this.columnObtainedGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObtainedGPAColumn {
                get {
                    return this.columnObtainedGPA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PointSecuredColumn {
                get {
                    return this.columnPointSecured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPointSecuredColumn {
                get {
                    return this.columnTotalPointSecured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditTakenColumn {
                get {
                    return this.columnCreditTaken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditEarnedColumn {
                get {
                    return this.columnCreditEarned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GPAColumn {
                get {
                    return this.columnGPA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HallColumn {
                get {
                    return this.columnHall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdRow this[int index] {
                get {
                    return ((GetTabulationSheetDataByHeldInIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTabulationSheetDataByHeldInIdRowChangeEventHandler GetTabulationSheetDataByHeldInIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTabulationSheetDataByHeldInIdRowChangeEventHandler GetTabulationSheetDataByHeldInIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTabulationSheetDataByHeldInIdRowChangeEventHandler GetTabulationSheetDataByHeldInIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTabulationSheetDataByHeldInIdRowChangeEventHandler GetTabulationSheetDataByHeldInIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetTabulationSheetDataByHeldInIdRow(GetTabulationSheetDataByHeldInIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdRow AddGetTabulationSheetDataByHeldInIdRow(
                        int StudentID, 
                        string Roll, 
                        string FullName, 
                        string FormalCode, 
                        string VersionCode, 
                        string Title, 
                        decimal CourseCredit, 
                        decimal ObtainedTotalMarks, 
                        string ObtainedGrade, 
                        decimal ObtainedGPA, 
                        decimal PointSecured, 
                        decimal TotalPointSecured, 
                        decimal CreditTaken, 
                        decimal CreditEarned, 
                        decimal GPA, 
                        int ID, 
                        string Hall) {
                GetTabulationSheetDataByHeldInIdRow rowGetTabulationSheetDataByHeldInIdRow = ((GetTabulationSheetDataByHeldInIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StudentID,
                        Roll,
                        FullName,
                        FormalCode,
                        VersionCode,
                        Title,
                        CourseCredit,
                        ObtainedTotalMarks,
                        ObtainedGrade,
                        ObtainedGPA,
                        PointSecured,
                        TotalPointSecured,
                        CreditTaken,
                        CreditEarned,
                        GPA,
                        ID,
                        Hall};
                rowGetTabulationSheetDataByHeldInIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetTabulationSheetDataByHeldInIdRow);
                return rowGetTabulationSheetDataByHeldInIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetTabulationSheetDataByHeldInIdDataTable cln = ((GetTabulationSheetDataByHeldInIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetTabulationSheetDataByHeldInIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStudentID = base.Columns["StudentID"];
                this.columnRoll = base.Columns["Roll"];
                this.columnFullName = base.Columns["FullName"];
                this.columnFormalCode = base.Columns["FormalCode"];
                this.columnVersionCode = base.Columns["VersionCode"];
                this.columnTitle = base.Columns["Title"];
                this.columnCourseCredit = base.Columns["CourseCredit"];
                this.columnObtainedTotalMarks = base.Columns["ObtainedTotalMarks"];
                this.columnObtainedGrade = base.Columns["ObtainedGrade"];
                this.columnObtainedGPA = base.Columns["ObtainedGPA"];
                this.columnPointSecured = base.Columns["PointSecured"];
                this.columnTotalPointSecured = base.Columns["TotalPointSecured"];
                this.columnCreditTaken = base.Columns["CreditTaken"];
                this.columnCreditEarned = base.Columns["CreditEarned"];
                this.columnGPA = base.Columns["GPA"];
                this.columnID = base.Columns["ID"];
                this.columnHall = base.Columns["Hall"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnRoll = new global::System.Data.DataColumn("Roll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnFormalCode = new global::System.Data.DataColumn("FormalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormalCode);
                this.columnVersionCode = new global::System.Data.DataColumn("VersionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionCode);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnCourseCredit = new global::System.Data.DataColumn("CourseCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourseCredit);
                this.columnObtainedTotalMarks = new global::System.Data.DataColumn("ObtainedTotalMarks", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObtainedTotalMarks);
                this.columnObtainedGrade = new global::System.Data.DataColumn("ObtainedGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObtainedGrade);
                this.columnObtainedGPA = new global::System.Data.DataColumn("ObtainedGPA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObtainedGPA);
                this.columnPointSecured = new global::System.Data.DataColumn("PointSecured", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointSecured);
                this.columnTotalPointSecured = new global::System.Data.DataColumn("TotalPointSecured", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPointSecured);
                this.columnCreditTaken = new global::System.Data.DataColumn("CreditTaken", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditTaken);
                this.columnCreditEarned = new global::System.Data.DataColumn("CreditEarned", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditEarned);
                this.columnGPA = new global::System.Data.DataColumn("GPA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGPA);
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnHall = new global::System.Data.DataColumn("Hall", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall);
                this.columnStudentID.AllowDBNull = false;
                this.columnRoll.MaxLength = 2147483647;
                this.columnFullName.MaxLength = 2147483647;
                this.columnFormalCode.MaxLength = 50;
                this.columnVersionCode.MaxLength = 50;
                this.columnTitle.MaxLength = 150;
                this.columnCourseCredit.AllowDBNull = false;
                this.columnObtainedGrade.MaxLength = 2147483647;
                this.columnTotalPointSecured.ReadOnly = true;
                this.columnCreditTaken.ReadOnly = true;
                this.columnCreditEarned.ReadOnly = true;
                this.columnGPA.ReadOnly = true;
                this.columnID.AllowDBNull = false;
                this.columnHall.AllowDBNull = false;
                this.columnHall.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdRow NewGetTabulationSheetDataByHeldInIdRow() {
                return ((GetTabulationSheetDataByHeldInIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetTabulationSheetDataByHeldInIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetTabulationSheetDataByHeldInIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetTabulationSheetDataByHeldInIdRowChanged != null)) {
                    this.GetTabulationSheetDataByHeldInIdRowChanged(this, new GetTabulationSheetDataByHeldInIdRowChangeEvent(((GetTabulationSheetDataByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetTabulationSheetDataByHeldInIdRowChanging != null)) {
                    this.GetTabulationSheetDataByHeldInIdRowChanging(this, new GetTabulationSheetDataByHeldInIdRowChangeEvent(((GetTabulationSheetDataByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetTabulationSheetDataByHeldInIdRowDeleted != null)) {
                    this.GetTabulationSheetDataByHeldInIdRowDeleted(this, new GetTabulationSheetDataByHeldInIdRowChangeEvent(((GetTabulationSheetDataByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetTabulationSheetDataByHeldInIdRowDeleting != null)) {
                    this.GetTabulationSheetDataByHeldInIdRowDeleting(this, new GetTabulationSheetDataByHeldInIdRowChangeEvent(((GetTabulationSheetDataByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetTabulationSheetDataByHeldInIdRow(GetTabulationSheetDataByHeldInIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetTabulationSheetDataByHeldInIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable : global::System.Data.TypedTableBase<GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow> {
            
            private global::System.Data.DataColumn columnRoll;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnInternalMark;
            
            private global::System.Data.DataColumn columnExternalMark;
            
            private global::System.Data.DataColumn columnThirdMark;
            
            private global::System.Data.DataColumn columnAverage;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable() {
                this.TableName = "GetFirstSecondAndThirdExaminerMarkDetailsBySectionId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RollColumn {
                get {
                    return this.columnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn InternalMarkColumn {
                get {
                    return this.columnInternalMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExternalMarkColumn {
                get {
                    return this.columnExternalMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ThirdMarkColumn {
                get {
                    return this.columnThirdMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AverageColumn {
                get {
                    return this.columnAverage;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow this[int index] {
                get {
                    return ((GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEventHandler GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEventHandler GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEventHandler GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEventHandler GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow(GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow AddGetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow(string Roll, string FullName, decimal InternalMark, decimal ExternalMark, decimal ThirdMark, decimal Average) {
                GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow rowGetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow = ((GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        Roll,
                        FullName,
                        InternalMark,
                        ExternalMark,
                        ThirdMark,
                        Average};
                rowGetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow);
                return rowGetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable cln = ((GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnRoll = base.Columns["Roll"];
                this.columnFullName = base.Columns["FullName"];
                this.columnInternalMark = base.Columns["InternalMark"];
                this.columnExternalMark = base.Columns["ExternalMark"];
                this.columnThirdMark = base.Columns["ThirdMark"];
                this.columnAverage = base.Columns["Average"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnRoll = new global::System.Data.DataColumn("Roll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnInternalMark = new global::System.Data.DataColumn("InternalMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnInternalMark);
                this.columnExternalMark = new global::System.Data.DataColumn("ExternalMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExternalMark);
                this.columnThirdMark = new global::System.Data.DataColumn("ThirdMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnThirdMark);
                this.columnAverage = new global::System.Data.DataColumn("Average", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAverage);
                this.columnRoll.AllowDBNull = false;
                this.columnRoll.MaxLength = 2147483647;
                this.columnFullName.MaxLength = 2147483647;
                this.columnInternalMark.AllowDBNull = false;
                this.columnExternalMark.AllowDBNull = false;
                this.columnThirdMark.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow NewGetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow() {
                return ((GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChanged != null)) {
                    this.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChanged(this, new GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEvent(((GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChanging != null)) {
                    this.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChanging(this, new GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEvent(((GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowDeleted != null)) {
                    this.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowDeleted(this, new GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEvent(((GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowDeleting != null)) {
                    this.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowDeleting(this, new GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEvent(((GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow(GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetAllRollSheetStudentListByHeldInIdDataTable : global::System.Data.TypedTableBase<GetAllRollSheetStudentListByHeldInIdRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnShortName;
            
            private global::System.Data.DataColumn columnAdmissionSession;
            
            private global::System.Data.DataColumn columnRoll;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnHallCode;
            
            private global::System.Data.DataColumn columnFormalCode;
            
            private global::System.Data.DataColumn columnVersionCode;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnCourseCredit;
            
            private global::System.Data.DataColumn columnSectionName;
            
            private global::System.Data.DataColumn columnRetakeNo;
            
            private global::System.Data.DataColumn columnCourseType;
            
            private global::System.Data.DataColumn columnStudentType;
            
            private global::System.Data.DataColumn columnPhotoPath;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRollSheetStudentListByHeldInIdDataTable() {
                this.TableName = "GetAllRollSheetStudentListByHeldInId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetAllRollSheetStudentListByHeldInIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetAllRollSheetStudentListByHeldInIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ShortNameColumn {
                get {
                    return this.columnShortName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AdmissionSessionColumn {
                get {
                    return this.columnAdmissionSession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RollColumn {
                get {
                    return this.columnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HallCodeColumn {
                get {
                    return this.columnHallCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormalCodeColumn {
                get {
                    return this.columnFormalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionCodeColumn {
                get {
                    return this.columnVersionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourseCreditColumn {
                get {
                    return this.columnCourseCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SectionNameColumn {
                get {
                    return this.columnSectionName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetakeNoColumn {
                get {
                    return this.columnRetakeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourseTypeColumn {
                get {
                    return this.columnCourseType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StudentTypeColumn {
                get {
                    return this.columnStudentType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhotoPathColumn {
                get {
                    return this.columnPhotoPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRollSheetStudentListByHeldInIdRow this[int index] {
                get {
                    return ((GetAllRollSheetStudentListByHeldInIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAllRollSheetStudentListByHeldInIdRowChangeEventHandler GetAllRollSheetStudentListByHeldInIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAllRollSheetStudentListByHeldInIdRowChangeEventHandler GetAllRollSheetStudentListByHeldInIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAllRollSheetStudentListByHeldInIdRowChangeEventHandler GetAllRollSheetStudentListByHeldInIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAllRollSheetStudentListByHeldInIdRowChangeEventHandler GetAllRollSheetStudentListByHeldInIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetAllRollSheetStudentListByHeldInIdRow(GetAllRollSheetStudentListByHeldInIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRollSheetStudentListByHeldInIdRow AddGetAllRollSheetStudentListByHeldInIdRow(
                        int ID, 
                        int StudentID, 
                        string ShortName, 
                        string AdmissionSession, 
                        string Roll, 
                        string FullName, 
                        string HallCode, 
                        string FormalCode, 
                        string VersionCode, 
                        string Title, 
                        decimal CourseCredit, 
                        string SectionName, 
                        int RetakeNo, 
                        string CourseType, 
                        string StudentType, 
                        string PhotoPath) {
                GetAllRollSheetStudentListByHeldInIdRow rowGetAllRollSheetStudentListByHeldInIdRow = ((GetAllRollSheetStudentListByHeldInIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        StudentID,
                        ShortName,
                        AdmissionSession,
                        Roll,
                        FullName,
                        HallCode,
                        FormalCode,
                        VersionCode,
                        Title,
                        CourseCredit,
                        SectionName,
                        RetakeNo,
                        CourseType,
                        StudentType,
                        PhotoPath};
                rowGetAllRollSheetStudentListByHeldInIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetAllRollSheetStudentListByHeldInIdRow);
                return rowGetAllRollSheetStudentListByHeldInIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetAllRollSheetStudentListByHeldInIdDataTable cln = ((GetAllRollSheetStudentListByHeldInIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetAllRollSheetStudentListByHeldInIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnStudentID = base.Columns["StudentID"];
                this.columnShortName = base.Columns["ShortName"];
                this.columnAdmissionSession = base.Columns["AdmissionSession"];
                this.columnRoll = base.Columns["Roll"];
                this.columnFullName = base.Columns["FullName"];
                this.columnHallCode = base.Columns["HallCode"];
                this.columnFormalCode = base.Columns["FormalCode"];
                this.columnVersionCode = base.Columns["VersionCode"];
                this.columnTitle = base.Columns["Title"];
                this.columnCourseCredit = base.Columns["CourseCredit"];
                this.columnSectionName = base.Columns["SectionName"];
                this.columnRetakeNo = base.Columns["RetakeNo"];
                this.columnCourseType = base.Columns["CourseType"];
                this.columnStudentType = base.Columns["StudentType"];
                this.columnPhotoPath = base.Columns["PhotoPath"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnShortName = new global::System.Data.DataColumn("ShortName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnShortName);
                this.columnAdmissionSession = new global::System.Data.DataColumn("AdmissionSession", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAdmissionSession);
                this.columnRoll = new global::System.Data.DataColumn("Roll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnHallCode = new global::System.Data.DataColumn("HallCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHallCode);
                this.columnFormalCode = new global::System.Data.DataColumn("FormalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormalCode);
                this.columnVersionCode = new global::System.Data.DataColumn("VersionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionCode);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnCourseCredit = new global::System.Data.DataColumn("CourseCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourseCredit);
                this.columnSectionName = new global::System.Data.DataColumn("SectionName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionName);
                this.columnRetakeNo = new global::System.Data.DataColumn("RetakeNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetakeNo);
                this.columnCourseType = new global::System.Data.DataColumn("CourseType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourseType);
                this.columnStudentType = new global::System.Data.DataColumn("StudentType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentType);
                this.columnPhotoPath = new global::System.Data.DataColumn("PhotoPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhotoPath);
                this.columnID.AllowDBNull = false;
                this.columnStudentID.AllowDBNull = false;
                this.columnShortName.MaxLength = 100;
                this.columnAdmissionSession.AllowDBNull = false;
                this.columnAdmissionSession.MaxLength = 15;
                this.columnRoll.MaxLength = 2147483647;
                this.columnFullName.MaxLength = 2147483647;
                this.columnHallCode.AllowDBNull = false;
                this.columnHallCode.MaxLength = 2147483647;
                this.columnFormalCode.MaxLength = 50;
                this.columnVersionCode.MaxLength = 50;
                this.columnTitle.MaxLength = 150;
                this.columnCourseCredit.AllowDBNull = false;
                this.columnSectionName.MaxLength = 250;
                this.columnRetakeNo.AllowDBNull = false;
                this.columnCourseType.AllowDBNull = false;
                this.columnCourseType.MaxLength = 14;
                this.columnStudentType.MaxLength = 2147483647;
                this.columnPhotoPath.MaxLength = 546;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRollSheetStudentListByHeldInIdRow NewGetAllRollSheetStudentListByHeldInIdRow() {
                return ((GetAllRollSheetStudentListByHeldInIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetAllRollSheetStudentListByHeldInIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetAllRollSheetStudentListByHeldInIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetAllRollSheetStudentListByHeldInIdRowChanged != null)) {
                    this.GetAllRollSheetStudentListByHeldInIdRowChanged(this, new GetAllRollSheetStudentListByHeldInIdRowChangeEvent(((GetAllRollSheetStudentListByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetAllRollSheetStudentListByHeldInIdRowChanging != null)) {
                    this.GetAllRollSheetStudentListByHeldInIdRowChanging(this, new GetAllRollSheetStudentListByHeldInIdRowChangeEvent(((GetAllRollSheetStudentListByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetAllRollSheetStudentListByHeldInIdRowDeleted != null)) {
                    this.GetAllRollSheetStudentListByHeldInIdRowDeleted(this, new GetAllRollSheetStudentListByHeldInIdRowChangeEvent(((GetAllRollSheetStudentListByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetAllRollSheetStudentListByHeldInIdRowDeleting != null)) {
                    this.GetAllRollSheetStudentListByHeldInIdRowDeleting(this, new GetAllRollSheetStudentListByHeldInIdRowChangeEvent(((GetAllRollSheetStudentListByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetAllRollSheetStudentListByHeldInIdRow(GetAllRollSheetStudentListByHeldInIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetAllRollSheetStudentListByHeldInIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetAdmitCardDataByHeldInIdDataTable : global::System.Data.TypedTableBase<GetAdmitCardDataByHeldInIdRow> {
            
            private global::System.Data.DataColumn columnDetailedName;
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnRoll;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnFatherName;
            
            private global::System.Data.DataColumn columnHallName;
            
            private global::System.Data.DataColumn columnSession;
            
            private global::System.Data.DataColumn columnTempSLNo;
            
            private global::System.Data.DataColumn columnRetakeNo;
            
            private global::System.Data.DataColumn columnFormalCode;
            
            private global::System.Data.DataColumn columnVersionCode;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnCredits;
            
            private global::System.Data.DataColumn columnPhotoPath;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAdmitCardDataByHeldInIdDataTable() {
                this.TableName = "GetAdmitCardDataByHeldInId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetAdmitCardDataByHeldInIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetAdmitCardDataByHeldInIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn DetailedNameColumn {
                get {
                    return this.columnDetailedName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RollColumn {
                get {
                    return this.columnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FatherNameColumn {
                get {
                    return this.columnFatherName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HallNameColumn {
                get {
                    return this.columnHallName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SessionColumn {
                get {
                    return this.columnSession;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TempSLNoColumn {
                get {
                    return this.columnTempSLNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RetakeNoColumn {
                get {
                    return this.columnRetakeNo;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormalCodeColumn {
                get {
                    return this.columnFormalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionCodeColumn {
                get {
                    return this.columnVersionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditsColumn {
                get {
                    return this.columnCredits;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PhotoPathColumn {
                get {
                    return this.columnPhotoPath;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAdmitCardDataByHeldInIdRow this[int index] {
                get {
                    return ((GetAdmitCardDataByHeldInIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAdmitCardDataByHeldInIdRowChangeEventHandler GetAdmitCardDataByHeldInIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAdmitCardDataByHeldInIdRowChangeEventHandler GetAdmitCardDataByHeldInIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAdmitCardDataByHeldInIdRowChangeEventHandler GetAdmitCardDataByHeldInIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetAdmitCardDataByHeldInIdRowChangeEventHandler GetAdmitCardDataByHeldInIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetAdmitCardDataByHeldInIdRow(GetAdmitCardDataByHeldInIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAdmitCardDataByHeldInIdRow AddGetAdmitCardDataByHeldInIdRow(string DetailedName, int StudentID, string Roll, string FullName, string FatherName, string HallName, string Session, long TempSLNo, int RetakeNo, string FormalCode, string VersionCode, string Title, decimal Credits, string PhotoPath) {
                GetAdmitCardDataByHeldInIdRow rowGetAdmitCardDataByHeldInIdRow = ((GetAdmitCardDataByHeldInIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        DetailedName,
                        StudentID,
                        Roll,
                        FullName,
                        FatherName,
                        HallName,
                        Session,
                        TempSLNo,
                        RetakeNo,
                        FormalCode,
                        VersionCode,
                        Title,
                        Credits,
                        PhotoPath};
                rowGetAdmitCardDataByHeldInIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetAdmitCardDataByHeldInIdRow);
                return rowGetAdmitCardDataByHeldInIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetAdmitCardDataByHeldInIdDataTable cln = ((GetAdmitCardDataByHeldInIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetAdmitCardDataByHeldInIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnDetailedName = base.Columns["DetailedName"];
                this.columnStudentID = base.Columns["StudentID"];
                this.columnRoll = base.Columns["Roll"];
                this.columnFullName = base.Columns["FullName"];
                this.columnFatherName = base.Columns["FatherName"];
                this.columnHallName = base.Columns["HallName"];
                this.columnSession = base.Columns["Session"];
                this.columnTempSLNo = base.Columns["TempSLNo"];
                this.columnRetakeNo = base.Columns["RetakeNo"];
                this.columnFormalCode = base.Columns["FormalCode"];
                this.columnVersionCode = base.Columns["VersionCode"];
                this.columnTitle = base.Columns["Title"];
                this.columnCredits = base.Columns["Credits"];
                this.columnPhotoPath = base.Columns["PhotoPath"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnDetailedName = new global::System.Data.DataColumn("DetailedName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnDetailedName);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnRoll = new global::System.Data.DataColumn("Roll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnFatherName = new global::System.Data.DataColumn("FatherName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFatherName);
                this.columnHallName = new global::System.Data.DataColumn("HallName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHallName);
                this.columnSession = new global::System.Data.DataColumn("Session", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSession);
                this.columnTempSLNo = new global::System.Data.DataColumn("TempSLNo", typeof(long), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTempSLNo);
                this.columnRetakeNo = new global::System.Data.DataColumn("RetakeNo", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRetakeNo);
                this.columnFormalCode = new global::System.Data.DataColumn("FormalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormalCode);
                this.columnVersionCode = new global::System.Data.DataColumn("VersionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionCode);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnCredits = new global::System.Data.DataColumn("Credits", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCredits);
                this.columnPhotoPath = new global::System.Data.DataColumn("PhotoPath", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPhotoPath);
                this.columnDetailedName.ReadOnly = true;
                this.columnDetailedName.MaxLength = 100;
                this.columnStudentID.ReadOnly = true;
                this.columnRoll.ReadOnly = true;
                this.columnRoll.MaxLength = 2147483647;
                this.columnFullName.ReadOnly = true;
                this.columnFullName.MaxLength = 2147483647;
                this.columnFatherName.ReadOnly = true;
                this.columnFatherName.MaxLength = 2147483647;
                this.columnHallName.ReadOnly = true;
                this.columnHallName.MaxLength = 2147483647;
                this.columnSession.ReadOnly = true;
                this.columnSession.MaxLength = 50;
                this.columnTempSLNo.ReadOnly = true;
                this.columnRetakeNo.ReadOnly = true;
                this.columnFormalCode.ReadOnly = true;
                this.columnFormalCode.MaxLength = 50;
                this.columnVersionCode.ReadOnly = true;
                this.columnVersionCode.MaxLength = 50;
                this.columnTitle.ReadOnly = true;
                this.columnTitle.MaxLength = 150;
                this.columnCredits.ReadOnly = true;
                this.columnPhotoPath.ReadOnly = true;
                this.columnPhotoPath.MaxLength = 545;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAdmitCardDataByHeldInIdRow NewGetAdmitCardDataByHeldInIdRow() {
                return ((GetAdmitCardDataByHeldInIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetAdmitCardDataByHeldInIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetAdmitCardDataByHeldInIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetAdmitCardDataByHeldInIdRowChanged != null)) {
                    this.GetAdmitCardDataByHeldInIdRowChanged(this, new GetAdmitCardDataByHeldInIdRowChangeEvent(((GetAdmitCardDataByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetAdmitCardDataByHeldInIdRowChanging != null)) {
                    this.GetAdmitCardDataByHeldInIdRowChanging(this, new GetAdmitCardDataByHeldInIdRowChangeEvent(((GetAdmitCardDataByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetAdmitCardDataByHeldInIdRowDeleted != null)) {
                    this.GetAdmitCardDataByHeldInIdRowDeleted(this, new GetAdmitCardDataByHeldInIdRowChangeEvent(((GetAdmitCardDataByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetAdmitCardDataByHeldInIdRowDeleting != null)) {
                    this.GetAdmitCardDataByHeldInIdRowDeleting(this, new GetAdmitCardDataByHeldInIdRowChangeEvent(((GetAdmitCardDataByHeldInIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetAdmitCardDataByHeldInIdRow(GetAdmitCardDataByHeldInIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetAdmitCardDataByHeldInIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetContinuousExamMarkDetailsBySectionIdDataTable : global::System.Data.TypedTableBase<GetContinuousExamMarkDetailsBySectionIdRow> {
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnRoll;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnCourseCredit;
            
            private global::System.Data.DataColumn columnExamMarkDetailId;
            
            private global::System.Data.DataColumn columnMarks;
            
            private global::System.Data.DataColumn columnExamTemplateItemId;
            
            private global::System.Data.DataColumn columnColumnSequence;
            
            private global::System.Data.DataColumn columnExamName;
            
            private global::System.Data.DataColumn columnExamMark;
            
            private global::System.Data.DataColumn columnObtainedMark;
            
            private global::System.Data.DataColumn columnPublishGrade;
            
            private global::System.Data.DataColumn columnExamType;
            
            private global::System.Data.DataColumn columnSessionWithReAdd;
            
            private global::System.Data.DataColumn columnReAddStatus;
            
            private global::System.Data.DataColumn columnObtainedGrade;
            
            private global::System.Data.DataColumn columnGradePoint;
            
            private global::System.Data.DataColumn columnPointSecured;
            
            private global::System.Data.DataColumn columnTotalMark;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetContinuousExamMarkDetailsBySectionIdDataTable() {
                this.TableName = "GetContinuousExamMarkDetailsBySectionId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetContinuousExamMarkDetailsBySectionIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetContinuousExamMarkDetailsBySectionIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RollColumn {
                get {
                    return this.columnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourseCreditColumn {
                get {
                    return this.columnCourseCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamMarkDetailIdColumn {
                get {
                    return this.columnExamMarkDetailId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarksColumn {
                get {
                    return this.columnMarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamTemplateItemIdColumn {
                get {
                    return this.columnExamTemplateItemId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ColumnSequenceColumn {
                get {
                    return this.columnColumnSequence;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamNameColumn {
                get {
                    return this.columnExamName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamMarkColumn {
                get {
                    return this.columnExamMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObtainedMarkColumn {
                get {
                    return this.columnObtainedMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PublishGradeColumn {
                get {
                    return this.columnPublishGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ExamTypeColumn {
                get {
                    return this.columnExamType;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SessionWithReAddColumn {
                get {
                    return this.columnSessionWithReAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReAddStatusColumn {
                get {
                    return this.columnReAddStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObtainedGradeColumn {
                get {
                    return this.columnObtainedGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GradePointColumn {
                get {
                    return this.columnGradePoint;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PointSecuredColumn {
                get {
                    return this.columnPointSecured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalMarkColumn {
                get {
                    return this.columnTotalMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetContinuousExamMarkDetailsBySectionIdRow this[int index] {
                get {
                    return ((GetContinuousExamMarkDetailsBySectionIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetContinuousExamMarkDetailsBySectionIdRowChangeEventHandler GetContinuousExamMarkDetailsBySectionIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetContinuousExamMarkDetailsBySectionIdRowChangeEventHandler GetContinuousExamMarkDetailsBySectionIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetContinuousExamMarkDetailsBySectionIdRowChangeEventHandler GetContinuousExamMarkDetailsBySectionIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetContinuousExamMarkDetailsBySectionIdRowChangeEventHandler GetContinuousExamMarkDetailsBySectionIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetContinuousExamMarkDetailsBySectionIdRow(GetContinuousExamMarkDetailsBySectionIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetContinuousExamMarkDetailsBySectionIdRow AddGetContinuousExamMarkDetailsBySectionIdRow(
                        int StudentID, 
                        string Roll, 
                        string FullName, 
                        decimal CourseCredit, 
                        int ExamMarkDetailId, 
                        decimal Marks, 
                        int ExamTemplateItemId, 
                        int ColumnSequence, 
                        string ExamName, 
                        decimal ExamMark, 
                        decimal ObtainedMark, 
                        string PublishGrade, 
                        string ExamType, 
                        string SessionWithReAdd, 
                        int ReAddStatus, 
                        string ObtainedGrade, 
                        decimal GradePoint, 
                        decimal PointSecured, 
                        decimal TotalMark) {
                GetContinuousExamMarkDetailsBySectionIdRow rowGetContinuousExamMarkDetailsBySectionIdRow = ((GetContinuousExamMarkDetailsBySectionIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StudentID,
                        Roll,
                        FullName,
                        CourseCredit,
                        ExamMarkDetailId,
                        Marks,
                        ExamTemplateItemId,
                        ColumnSequence,
                        ExamName,
                        ExamMark,
                        ObtainedMark,
                        PublishGrade,
                        ExamType,
                        SessionWithReAdd,
                        ReAddStatus,
                        ObtainedGrade,
                        GradePoint,
                        PointSecured,
                        TotalMark};
                rowGetContinuousExamMarkDetailsBySectionIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetContinuousExamMarkDetailsBySectionIdRow);
                return rowGetContinuousExamMarkDetailsBySectionIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetContinuousExamMarkDetailsBySectionIdDataTable cln = ((GetContinuousExamMarkDetailsBySectionIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetContinuousExamMarkDetailsBySectionIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStudentID = base.Columns["StudentID"];
                this.columnRoll = base.Columns["Roll"];
                this.columnFullName = base.Columns["FullName"];
                this.columnCourseCredit = base.Columns["CourseCredit"];
                this.columnExamMarkDetailId = base.Columns["ExamMarkDetailId"];
                this.columnMarks = base.Columns["Marks"];
                this.columnExamTemplateItemId = base.Columns["ExamTemplateItemId"];
                this.columnColumnSequence = base.Columns["ColumnSequence"];
                this.columnExamName = base.Columns["ExamName"];
                this.columnExamMark = base.Columns["ExamMark"];
                this.columnObtainedMark = base.Columns["ObtainedMark"];
                this.columnPublishGrade = base.Columns["PublishGrade"];
                this.columnExamType = base.Columns["ExamType"];
                this.columnSessionWithReAdd = base.Columns["SessionWithReAdd"];
                this.columnReAddStatus = base.Columns["ReAddStatus"];
                this.columnObtainedGrade = base.Columns["ObtainedGrade"];
                this.columnGradePoint = base.Columns["GradePoint"];
                this.columnPointSecured = base.Columns["PointSecured"];
                this.columnTotalMark = base.Columns["TotalMark"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnRoll = new global::System.Data.DataColumn("Roll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnCourseCredit = new global::System.Data.DataColumn("CourseCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourseCredit);
                this.columnExamMarkDetailId = new global::System.Data.DataColumn("ExamMarkDetailId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamMarkDetailId);
                this.columnMarks = new global::System.Data.DataColumn("Marks", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarks);
                this.columnExamTemplateItemId = new global::System.Data.DataColumn("ExamTemplateItemId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamTemplateItemId);
                this.columnColumnSequence = new global::System.Data.DataColumn("ColumnSequence", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnColumnSequence);
                this.columnExamName = new global::System.Data.DataColumn("ExamName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamName);
                this.columnExamMark = new global::System.Data.DataColumn("ExamMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamMark);
                this.columnObtainedMark = new global::System.Data.DataColumn("ObtainedMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObtainedMark);
                this.columnPublishGrade = new global::System.Data.DataColumn("PublishGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPublishGrade);
                this.columnExamType = new global::System.Data.DataColumn("ExamType", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnExamType);
                this.columnSessionWithReAdd = new global::System.Data.DataColumn("SessionWithReAdd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSessionWithReAdd);
                this.columnReAddStatus = new global::System.Data.DataColumn("ReAddStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReAddStatus);
                this.columnObtainedGrade = new global::System.Data.DataColumn("ObtainedGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObtainedGrade);
                this.columnGradePoint = new global::System.Data.DataColumn("GradePoint", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGradePoint);
                this.columnPointSecured = new global::System.Data.DataColumn("PointSecured", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointSecured);
                this.columnTotalMark = new global::System.Data.DataColumn("TotalMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMark);
                this.columnRoll.MaxLength = 2147483647;
                this.columnFullName.MaxLength = 2147483647;
                this.columnCourseCredit.AllowDBNull = false;
                this.columnExamTemplateItemId.AllowDBNull = false;
                this.columnColumnSequence.AllowDBNull = false;
                this.columnExamName.MaxLength = 250;
                this.columnPublishGrade.MaxLength = 2147483647;
                this.columnExamType.AllowDBNull = false;
                this.columnExamType.MaxLength = 50;
                this.columnSessionWithReAdd.AllowDBNull = false;
                this.columnSessionWithReAdd.MaxLength = 31;
                this.columnReAddStatus.AllowDBNull = false;
                this.columnObtainedGrade.MaxLength = 2147483647;
                this.columnGradePoint.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetContinuousExamMarkDetailsBySectionIdRow NewGetContinuousExamMarkDetailsBySectionIdRow() {
                return ((GetContinuousExamMarkDetailsBySectionIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetContinuousExamMarkDetailsBySectionIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetContinuousExamMarkDetailsBySectionIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetContinuousExamMarkDetailsBySectionIdRowChanged != null)) {
                    this.GetContinuousExamMarkDetailsBySectionIdRowChanged(this, new GetContinuousExamMarkDetailsBySectionIdRowChangeEvent(((GetContinuousExamMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetContinuousExamMarkDetailsBySectionIdRowChanging != null)) {
                    this.GetContinuousExamMarkDetailsBySectionIdRowChanging(this, new GetContinuousExamMarkDetailsBySectionIdRowChangeEvent(((GetContinuousExamMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetContinuousExamMarkDetailsBySectionIdRowDeleted != null)) {
                    this.GetContinuousExamMarkDetailsBySectionIdRowDeleted(this, new GetContinuousExamMarkDetailsBySectionIdRowChangeEvent(((GetContinuousExamMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetContinuousExamMarkDetailsBySectionIdRowDeleting != null)) {
                    this.GetContinuousExamMarkDetailsBySectionIdRowDeleting(this, new GetContinuousExamMarkDetailsBySectionIdRowChangeEvent(((GetContinuousExamMarkDetailsBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetContinuousExamMarkDetailsBySectionIdRow(GetContinuousExamMarkDetailsBySectionIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetContinuousExamMarkDetailsBySectionIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetTopSheetStudentListBySectionIdDataTable : global::System.Data.TypedTableBase<GetTopSheetStudentListBySectionIdRow> {
            
            private global::System.Data.DataColumn columnSectionId;
            
            private global::System.Data.DataColumn columnTotalStudent;
            
            private global::System.Data.DataColumn columnTotalPresent;
            
            private global::System.Data.DataColumn columnTotal;
            
            private global::System.Data.DataColumn columnPresentList;
            
            private global::System.Data.DataColumn columnAbsentList;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTopSheetStudentListBySectionIdDataTable() {
                this.TableName = "GetTopSheetStudentListBySectionId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetTopSheetStudentListBySectionIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetTopSheetStudentListBySectionIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SectionIdColumn {
                get {
                    return this.columnSectionId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalStudentColumn {
                get {
                    return this.columnTotalStudent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPresentColumn {
                get {
                    return this.columnTotalPresent;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalColumn {
                get {
                    return this.columnTotal;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PresentListColumn {
                get {
                    return this.columnPresentList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn AbsentListColumn {
                get {
                    return this.columnAbsentList;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTopSheetStudentListBySectionIdRow this[int index] {
                get {
                    return ((GetTopSheetStudentListBySectionIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTopSheetStudentListBySectionIdRowChangeEventHandler GetTopSheetStudentListBySectionIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTopSheetStudentListBySectionIdRowChangeEventHandler GetTopSheetStudentListBySectionIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTopSheetStudentListBySectionIdRowChangeEventHandler GetTopSheetStudentListBySectionIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTopSheetStudentListBySectionIdRowChangeEventHandler GetTopSheetStudentListBySectionIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetTopSheetStudentListBySectionIdRow(GetTopSheetStudentListBySectionIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTopSheetStudentListBySectionIdRow AddGetTopSheetStudentListBySectionIdRow(int SectionId, int TotalStudent, int TotalPresent, int Total, string PresentList, string AbsentList) {
                GetTopSheetStudentListBySectionIdRow rowGetTopSheetStudentListBySectionIdRow = ((GetTopSheetStudentListBySectionIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        SectionId,
                        TotalStudent,
                        TotalPresent,
                        Total,
                        PresentList,
                        AbsentList};
                rowGetTopSheetStudentListBySectionIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetTopSheetStudentListBySectionIdRow);
                return rowGetTopSheetStudentListBySectionIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetTopSheetStudentListBySectionIdDataTable cln = ((GetTopSheetStudentListBySectionIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetTopSheetStudentListBySectionIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnSectionId = base.Columns["SectionId"];
                this.columnTotalStudent = base.Columns["TotalStudent"];
                this.columnTotalPresent = base.Columns["TotalPresent"];
                this.columnTotal = base.Columns["Total"];
                this.columnPresentList = base.Columns["PresentList"];
                this.columnAbsentList = base.Columns["AbsentList"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnSectionId = new global::System.Data.DataColumn("SectionId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSectionId);
                this.columnTotalStudent = new global::System.Data.DataColumn("TotalStudent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalStudent);
                this.columnTotalPresent = new global::System.Data.DataColumn("TotalPresent", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPresent);
                this.columnTotal = new global::System.Data.DataColumn("Total", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotal);
                this.columnPresentList = new global::System.Data.DataColumn("PresentList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPresentList);
                this.columnAbsentList = new global::System.Data.DataColumn("AbsentList", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnAbsentList);
                this.columnSectionId.ReadOnly = true;
                this.columnTotalStudent.ReadOnly = true;
                this.columnTotalPresent.ReadOnly = true;
                this.columnTotal.ReadOnly = true;
                this.columnPresentList.ReadOnly = true;
                this.columnPresentList.MaxLength = 2147483647;
                this.columnAbsentList.ReadOnly = true;
                this.columnAbsentList.MaxLength = 2147483647;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTopSheetStudentListBySectionIdRow NewGetTopSheetStudentListBySectionIdRow() {
                return ((GetTopSheetStudentListBySectionIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetTopSheetStudentListBySectionIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetTopSheetStudentListBySectionIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetTopSheetStudentListBySectionIdRowChanged != null)) {
                    this.GetTopSheetStudentListBySectionIdRowChanged(this, new GetTopSheetStudentListBySectionIdRowChangeEvent(((GetTopSheetStudentListBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetTopSheetStudentListBySectionIdRowChanging != null)) {
                    this.GetTopSheetStudentListBySectionIdRowChanging(this, new GetTopSheetStudentListBySectionIdRowChangeEvent(((GetTopSheetStudentListBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetTopSheetStudentListBySectionIdRowDeleted != null)) {
                    this.GetTopSheetStudentListBySectionIdRowDeleted(this, new GetTopSheetStudentListBySectionIdRowChangeEvent(((GetTopSheetStudentListBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetTopSheetStudentListBySectionIdRowDeleting != null)) {
                    this.GetTopSheetStudentListBySectionIdRowDeleting(this, new GetTopSheetStudentListBySectionIdRowChangeEvent(((GetTopSheetStudentListBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetTopSheetStudentListBySectionIdRow(GetTopSheetStudentListBySectionIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetTopSheetStudentListBySectionIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable : global::System.Data.TypedTableBase<GetFirstExaminerFinalAssessmentMarkBySectionIdRow> {
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnStudentAdmissionAcaCalId;
            
            private global::System.Data.DataColumn columnRoll;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnMarkDiff;
            
            private global::System.Data.DataColumn columnTotalMark;
            
            private global::System.Data.DataColumn columnSessionWithReAdd;
            
            private global::System.Data.DataColumn columnReAddStatus;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable() {
                this.TableName = "GetFirstExaminerFinalAssessmentMarkBySectionId";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StudentAdmissionAcaCalIdColumn {
                get {
                    return this.columnStudentAdmissionAcaCalId;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RollColumn {
                get {
                    return this.columnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn MarkDiffColumn {
                get {
                    return this.columnMarkDiff;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalMarkColumn {
                get {
                    return this.columnTotalMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SessionWithReAddColumn {
                get {
                    return this.columnSessionWithReAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReAddStatusColumn {
                get {
                    return this.columnReAddStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstExaminerFinalAssessmentMarkBySectionIdRow this[int index] {
                get {
                    return ((GetFirstExaminerFinalAssessmentMarkBySectionIdRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEventHandler GetFirstExaminerFinalAssessmentMarkBySectionIdRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEventHandler GetFirstExaminerFinalAssessmentMarkBySectionIdRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEventHandler GetFirstExaminerFinalAssessmentMarkBySectionIdRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEventHandler GetFirstExaminerFinalAssessmentMarkBySectionIdRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetFirstExaminerFinalAssessmentMarkBySectionIdRow(GetFirstExaminerFinalAssessmentMarkBySectionIdRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstExaminerFinalAssessmentMarkBySectionIdRow AddGetFirstExaminerFinalAssessmentMarkBySectionIdRow(int StudentID, int StudentAdmissionAcaCalId, string Roll, string FullName, decimal MarkDiff, decimal TotalMark, string SessionWithReAdd, int ReAddStatus) {
                GetFirstExaminerFinalAssessmentMarkBySectionIdRow rowGetFirstExaminerFinalAssessmentMarkBySectionIdRow = ((GetFirstExaminerFinalAssessmentMarkBySectionIdRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        StudentID,
                        StudentAdmissionAcaCalId,
                        Roll,
                        FullName,
                        MarkDiff,
                        TotalMark,
                        SessionWithReAdd,
                        ReAddStatus};
                rowGetFirstExaminerFinalAssessmentMarkBySectionIdRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetFirstExaminerFinalAssessmentMarkBySectionIdRow);
                return rowGetFirstExaminerFinalAssessmentMarkBySectionIdRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable cln = ((GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnStudentID = base.Columns["StudentID"];
                this.columnStudentAdmissionAcaCalId = base.Columns["StudentAdmissionAcaCalId"];
                this.columnRoll = base.Columns["Roll"];
                this.columnFullName = base.Columns["FullName"];
                this.columnMarkDiff = base.Columns["MarkDiff"];
                this.columnTotalMark = base.Columns["TotalMark"];
                this.columnSessionWithReAdd = base.Columns["SessionWithReAdd"];
                this.columnReAddStatus = base.Columns["ReAddStatus"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnStudentAdmissionAcaCalId = new global::System.Data.DataColumn("StudentAdmissionAcaCalId", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentAdmissionAcaCalId);
                this.columnRoll = new global::System.Data.DataColumn("Roll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnMarkDiff = new global::System.Data.DataColumn("MarkDiff", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnMarkDiff);
                this.columnTotalMark = new global::System.Data.DataColumn("TotalMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalMark);
                this.columnSessionWithReAdd = new global::System.Data.DataColumn("SessionWithReAdd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSessionWithReAdd);
                this.columnReAddStatus = new global::System.Data.DataColumn("ReAddStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReAddStatus);
                this.columnStudentID.AllowDBNull = false;
                this.columnStudentAdmissionAcaCalId.AllowDBNull = false;
                this.columnRoll.AllowDBNull = false;
                this.columnRoll.MaxLength = 2147483647;
                this.columnFullName.MaxLength = 2147483647;
                this.columnSessionWithReAdd.AllowDBNull = false;
                this.columnSessionWithReAdd.MaxLength = 31;
                this.columnReAddStatus.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstExaminerFinalAssessmentMarkBySectionIdRow NewGetFirstExaminerFinalAssessmentMarkBySectionIdRow() {
                return ((GetFirstExaminerFinalAssessmentMarkBySectionIdRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetFirstExaminerFinalAssessmentMarkBySectionIdRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetFirstExaminerFinalAssessmentMarkBySectionIdRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetFirstExaminerFinalAssessmentMarkBySectionIdRowChanged != null)) {
                    this.GetFirstExaminerFinalAssessmentMarkBySectionIdRowChanged(this, new GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEvent(((GetFirstExaminerFinalAssessmentMarkBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetFirstExaminerFinalAssessmentMarkBySectionIdRowChanging != null)) {
                    this.GetFirstExaminerFinalAssessmentMarkBySectionIdRowChanging(this, new GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEvent(((GetFirstExaminerFinalAssessmentMarkBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetFirstExaminerFinalAssessmentMarkBySectionIdRowDeleted != null)) {
                    this.GetFirstExaminerFinalAssessmentMarkBySectionIdRowDeleted(this, new GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEvent(((GetFirstExaminerFinalAssessmentMarkBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetFirstExaminerFinalAssessmentMarkBySectionIdRowDeleting != null)) {
                    this.GetFirstExaminerFinalAssessmentMarkBySectionIdRowDeleting(this, new GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEvent(((GetFirstExaminerFinalAssessmentMarkBySectionIdRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetFirstExaminerFinalAssessmentMarkBySectionIdRow(GetFirstExaminerFinalAssessmentMarkBySectionIdRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents the strongly named DataTable class.
        ///</summary>
        [global::System.Serializable()]
        [global::System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")]
        public partial class GetTabulationSheetDataByHeldInIdNewDataTable : global::System.Data.TypedTableBase<GetTabulationSheetDataByHeldInIdNewRow> {
            
            private global::System.Data.DataColumn columnID;
            
            private global::System.Data.DataColumn columnStudentID;
            
            private global::System.Data.DataColumn columnRoll;
            
            private global::System.Data.DataColumn columnFullName;
            
            private global::System.Data.DataColumn columnHall;
            
            private global::System.Data.DataColumn columnFormalCode;
            
            private global::System.Data.DataColumn columnVersionCode;
            
            private global::System.Data.DataColumn columnTitle;
            
            private global::System.Data.DataColumn columnCourseCredit;
            
            private global::System.Data.DataColumn columnObtainedTotalMarks;
            
            private global::System.Data.DataColumn columnObtainedGrade;
            
            private global::System.Data.DataColumn columnObtainedGPA;
            
            private global::System.Data.DataColumn columnPointSecured;
            
            private global::System.Data.DataColumn columnSessionWithReAdd;
            
            private global::System.Data.DataColumn columnReAddStatus;
            
            private global::System.Data.DataColumn columnContinuosAssesment;
            
            private global::System.Data.DataColumn columnFinalMark;
            
            private global::System.Data.DataColumn columnTotalPointSecured;
            
            private global::System.Data.DataColumn columnCreditTaken;
            
            private global::System.Data.DataColumn columnCreditEarned;
            
            private global::System.Data.DataColumn columnGPA;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdNewDataTable() {
                this.TableName = "GetTabulationSheetDataByHeldInIdNew";
                this.BeginInit();
                this.InitClass();
                this.EndInit();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetTabulationSheetDataByHeldInIdNewDataTable(global::System.Data.DataTable table) {
                this.TableName = table.TableName;
                if ((table.CaseSensitive != table.DataSet.CaseSensitive)) {
                    this.CaseSensitive = table.CaseSensitive;
                }
                if ((table.Locale.ToString() != table.DataSet.Locale.ToString())) {
                    this.Locale = table.Locale;
                }
                if ((table.Namespace != table.DataSet.Namespace)) {
                    this.Namespace = table.Namespace;
                }
                this.Prefix = table.Prefix;
                this.MinimumCapacity = table.MinimumCapacity;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected GetTabulationSheetDataByHeldInIdNewDataTable(global::System.Runtime.Serialization.SerializationInfo info, global::System.Runtime.Serialization.StreamingContext context) : 
                    base(info, context) {
                this.InitVars();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn IDColumn {
                get {
                    return this.columnID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn StudentIDColumn {
                get {
                    return this.columnStudentID;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn RollColumn {
                get {
                    return this.columnRoll;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FullNameColumn {
                get {
                    return this.columnFullName;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn HallColumn {
                get {
                    return this.columnHall;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FormalCodeColumn {
                get {
                    return this.columnFormalCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn VersionCodeColumn {
                get {
                    return this.columnVersionCode;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TitleColumn {
                get {
                    return this.columnTitle;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CourseCreditColumn {
                get {
                    return this.columnCourseCredit;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObtainedTotalMarksColumn {
                get {
                    return this.columnObtainedTotalMarks;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObtainedGradeColumn {
                get {
                    return this.columnObtainedGrade;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ObtainedGPAColumn {
                get {
                    return this.columnObtainedGPA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn PointSecuredColumn {
                get {
                    return this.columnPointSecured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn SessionWithReAddColumn {
                get {
                    return this.columnSessionWithReAdd;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ReAddStatusColumn {
                get {
                    return this.columnReAddStatus;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn ContinuosAssesmentColumn {
                get {
                    return this.columnContinuosAssesment;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn FinalMarkColumn {
                get {
                    return this.columnFinalMark;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn TotalPointSecuredColumn {
                get {
                    return this.columnTotalPointSecured;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditTakenColumn {
                get {
                    return this.columnCreditTaken;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn CreditEarnedColumn {
                get {
                    return this.columnCreditEarned;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataColumn GPAColumn {
                get {
                    return this.columnGPA;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            [global::System.ComponentModel.Browsable(false)]
            public int Count {
                get {
                    return this.Rows.Count;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdNewRow this[int index] {
                get {
                    return ((GetTabulationSheetDataByHeldInIdNewRow)(this.Rows[index]));
                }
            }
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTabulationSheetDataByHeldInIdNewRowChangeEventHandler GetTabulationSheetDataByHeldInIdNewRowChanging;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTabulationSheetDataByHeldInIdNewRowChangeEventHandler GetTabulationSheetDataByHeldInIdNewRowChanged;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTabulationSheetDataByHeldInIdNewRowChangeEventHandler GetTabulationSheetDataByHeldInIdNewRowDeleting;
            
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public event GetTabulationSheetDataByHeldInIdNewRowChangeEventHandler GetTabulationSheetDataByHeldInIdNewRowDeleted;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void AddGetTabulationSheetDataByHeldInIdNewRow(GetTabulationSheetDataByHeldInIdNewRow row) {
                this.Rows.Add(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdNewRow AddGetTabulationSheetDataByHeldInIdNewRow(
                        int ID, 
                        int StudentID, 
                        string Roll, 
                        string FullName, 
                        string Hall, 
                        string FormalCode, 
                        string VersionCode, 
                        string Title, 
                        decimal CourseCredit, 
                        decimal ObtainedTotalMarks, 
                        string ObtainedGrade, 
                        decimal ObtainedGPA, 
                        decimal PointSecured, 
                        string SessionWithReAdd, 
                        int ReAddStatus, 
                        decimal ContinuosAssesment, 
                        decimal FinalMark, 
                        decimal TotalPointSecured, 
                        decimal CreditTaken, 
                        decimal CreditEarned, 
                        decimal GPA) {
                GetTabulationSheetDataByHeldInIdNewRow rowGetTabulationSheetDataByHeldInIdNewRow = ((GetTabulationSheetDataByHeldInIdNewRow)(this.NewRow()));
                object[] columnValuesArray = new object[] {
                        ID,
                        StudentID,
                        Roll,
                        FullName,
                        Hall,
                        FormalCode,
                        VersionCode,
                        Title,
                        CourseCredit,
                        ObtainedTotalMarks,
                        ObtainedGrade,
                        ObtainedGPA,
                        PointSecured,
                        SessionWithReAdd,
                        ReAddStatus,
                        ContinuosAssesment,
                        FinalMark,
                        TotalPointSecured,
                        CreditTaken,
                        CreditEarned,
                        GPA};
                rowGetTabulationSheetDataByHeldInIdNewRow.ItemArray = columnValuesArray;
                this.Rows.Add(rowGetTabulationSheetDataByHeldInIdNewRow);
                return rowGetTabulationSheetDataByHeldInIdNewRow;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public override global::System.Data.DataTable Clone() {
                GetTabulationSheetDataByHeldInIdNewDataTable cln = ((GetTabulationSheetDataByHeldInIdNewDataTable)(base.Clone()));
                cln.InitVars();
                return cln;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataTable CreateInstance() {
                return new GetTabulationSheetDataByHeldInIdNewDataTable();
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal void InitVars() {
                this.columnID = base.Columns["ID"];
                this.columnStudentID = base.Columns["StudentID"];
                this.columnRoll = base.Columns["Roll"];
                this.columnFullName = base.Columns["FullName"];
                this.columnHall = base.Columns["Hall"];
                this.columnFormalCode = base.Columns["FormalCode"];
                this.columnVersionCode = base.Columns["VersionCode"];
                this.columnTitle = base.Columns["Title"];
                this.columnCourseCredit = base.Columns["CourseCredit"];
                this.columnObtainedTotalMarks = base.Columns["ObtainedTotalMarks"];
                this.columnObtainedGrade = base.Columns["ObtainedGrade"];
                this.columnObtainedGPA = base.Columns["ObtainedGPA"];
                this.columnPointSecured = base.Columns["PointSecured"];
                this.columnSessionWithReAdd = base.Columns["SessionWithReAdd"];
                this.columnReAddStatus = base.Columns["ReAddStatus"];
                this.columnContinuosAssesment = base.Columns["ContinuosAssesment"];
                this.columnFinalMark = base.Columns["FinalMark"];
                this.columnTotalPointSecured = base.Columns["TotalPointSecured"];
                this.columnCreditTaken = base.Columns["CreditTaken"];
                this.columnCreditEarned = base.Columns["CreditEarned"];
                this.columnGPA = base.Columns["GPA"];
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private void InitClass() {
                this.columnID = new global::System.Data.DataColumn("ID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnID);
                this.columnStudentID = new global::System.Data.DataColumn("StudentID", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnStudentID);
                this.columnRoll = new global::System.Data.DataColumn("Roll", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnRoll);
                this.columnFullName = new global::System.Data.DataColumn("FullName", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFullName);
                this.columnHall = new global::System.Data.DataColumn("Hall", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnHall);
                this.columnFormalCode = new global::System.Data.DataColumn("FormalCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFormalCode);
                this.columnVersionCode = new global::System.Data.DataColumn("VersionCode", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnVersionCode);
                this.columnTitle = new global::System.Data.DataColumn("Title", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTitle);
                this.columnCourseCredit = new global::System.Data.DataColumn("CourseCredit", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCourseCredit);
                this.columnObtainedTotalMarks = new global::System.Data.DataColumn("ObtainedTotalMarks", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObtainedTotalMarks);
                this.columnObtainedGrade = new global::System.Data.DataColumn("ObtainedGrade", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObtainedGrade);
                this.columnObtainedGPA = new global::System.Data.DataColumn("ObtainedGPA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnObtainedGPA);
                this.columnPointSecured = new global::System.Data.DataColumn("PointSecured", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnPointSecured);
                this.columnSessionWithReAdd = new global::System.Data.DataColumn("SessionWithReAdd", typeof(string), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnSessionWithReAdd);
                this.columnReAddStatus = new global::System.Data.DataColumn("ReAddStatus", typeof(int), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnReAddStatus);
                this.columnContinuosAssesment = new global::System.Data.DataColumn("ContinuosAssesment", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnContinuosAssesment);
                this.columnFinalMark = new global::System.Data.DataColumn("FinalMark", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnFinalMark);
                this.columnTotalPointSecured = new global::System.Data.DataColumn("TotalPointSecured", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnTotalPointSecured);
                this.columnCreditTaken = new global::System.Data.DataColumn("CreditTaken", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditTaken);
                this.columnCreditEarned = new global::System.Data.DataColumn("CreditEarned", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnCreditEarned);
                this.columnGPA = new global::System.Data.DataColumn("GPA", typeof(decimal), null, global::System.Data.MappingType.Element);
                base.Columns.Add(this.columnGPA);
                this.columnID.AllowDBNull = false;
                this.columnStudentID.AllowDBNull = false;
                this.columnRoll.AllowDBNull = false;
                this.columnRoll.MaxLength = 2147483647;
                this.columnFullName.MaxLength = 2147483647;
                this.columnHall.AllowDBNull = false;
                this.columnHall.MaxLength = 2147483647;
                this.columnFormalCode.MaxLength = 50;
                this.columnVersionCode.MaxLength = 50;
                this.columnTitle.MaxLength = 150;
                this.columnCourseCredit.AllowDBNull = false;
                this.columnObtainedGrade.MaxLength = 2147483647;
                this.columnSessionWithReAdd.AllowDBNull = false;
                this.columnSessionWithReAdd.MaxLength = 31;
                this.columnReAddStatus.AllowDBNull = false;
                this.columnContinuosAssesment.AllowDBNull = false;
                this.columnFinalMark.AllowDBNull = false;
                this.columnTotalPointSecured.AllowDBNull = false;
                this.columnCreditTaken.AllowDBNull = false;
                this.columnCreditEarned.AllowDBNull = false;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdNewRow NewGetTabulationSheetDataByHeldInIdNewRow() {
                return ((GetTabulationSheetDataByHeldInIdNewRow)(this.NewRow()));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Data.DataRow NewRowFromBuilder(global::System.Data.DataRowBuilder builder) {
                return new GetTabulationSheetDataByHeldInIdNewRow(builder);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override global::System.Type GetRowType() {
                return typeof(GetTabulationSheetDataByHeldInIdNewRow);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanged(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanged(e);
                if ((this.GetTabulationSheetDataByHeldInIdNewRowChanged != null)) {
                    this.GetTabulationSheetDataByHeldInIdNewRowChanged(this, new GetTabulationSheetDataByHeldInIdNewRowChangeEvent(((GetTabulationSheetDataByHeldInIdNewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowChanging(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowChanging(e);
                if ((this.GetTabulationSheetDataByHeldInIdNewRowChanging != null)) {
                    this.GetTabulationSheetDataByHeldInIdNewRowChanging(this, new GetTabulationSheetDataByHeldInIdNewRowChangeEvent(((GetTabulationSheetDataByHeldInIdNewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleted(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleted(e);
                if ((this.GetTabulationSheetDataByHeldInIdNewRowDeleted != null)) {
                    this.GetTabulationSheetDataByHeldInIdNewRowDeleted(this, new GetTabulationSheetDataByHeldInIdNewRowChangeEvent(((GetTabulationSheetDataByHeldInIdNewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            protected override void OnRowDeleting(global::System.Data.DataRowChangeEventArgs e) {
                base.OnRowDeleting(e);
                if ((this.GetTabulationSheetDataByHeldInIdNewRowDeleting != null)) {
                    this.GetTabulationSheetDataByHeldInIdNewRowDeleting(this, new GetTabulationSheetDataByHeldInIdNewRowChangeEvent(((GetTabulationSheetDataByHeldInIdNewRow)(e.Row)), e.Action));
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void RemoveGetTabulationSheetDataByHeldInIdNewRow(GetTabulationSheetDataByHeldInIdNewRow row) {
                this.Rows.Remove(row);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public static global::System.Xml.Schema.XmlSchemaComplexType GetTypedTableSchema(global::System.Xml.Schema.XmlSchemaSet xs) {
                global::System.Xml.Schema.XmlSchemaComplexType type = new global::System.Xml.Schema.XmlSchemaComplexType();
                global::System.Xml.Schema.XmlSchemaSequence sequence = new global::System.Xml.Schema.XmlSchemaSequence();
                DataSet1 ds = new DataSet1();
                global::System.Xml.Schema.XmlSchemaAny any1 = new global::System.Xml.Schema.XmlSchemaAny();
                any1.Namespace = "http://www.w3.org/2001/XMLSchema";
                any1.MinOccurs = new decimal(0);
                any1.MaxOccurs = decimal.MaxValue;
                any1.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any1);
                global::System.Xml.Schema.XmlSchemaAny any2 = new global::System.Xml.Schema.XmlSchemaAny();
                any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1";
                any2.MinOccurs = new decimal(1);
                any2.ProcessContents = global::System.Xml.Schema.XmlSchemaContentProcessing.Lax;
                sequence.Items.Add(any2);
                global::System.Xml.Schema.XmlSchemaAttribute attribute1 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute1.Name = "namespace";
                attribute1.FixedValue = ds.Namespace;
                type.Attributes.Add(attribute1);
                global::System.Xml.Schema.XmlSchemaAttribute attribute2 = new global::System.Xml.Schema.XmlSchemaAttribute();
                attribute2.Name = "tableTypeName";
                attribute2.FixedValue = "GetTabulationSheetDataByHeldInIdNewDataTable";
                type.Attributes.Add(attribute2);
                type.Particle = sequence;
                global::System.Xml.Schema.XmlSchema dsSchema = ds.GetSchemaSerializable();
                if (xs.Contains(dsSchema.TargetNamespace)) {
                    global::System.IO.MemoryStream s1 = new global::System.IO.MemoryStream();
                    global::System.IO.MemoryStream s2 = new global::System.IO.MemoryStream();
                    try {
                        global::System.Xml.Schema.XmlSchema schema = null;
                        dsSchema.Write(s1);
                        for (global::System.Collections.IEnumerator schemas = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator(); schemas.MoveNext(); ) {
                            schema = ((global::System.Xml.Schema.XmlSchema)(schemas.Current));
                            s2.SetLength(0);
                            schema.Write(s2);
                            if ((s1.Length == s2.Length)) {
                                s1.Position = 0;
                                s2.Position = 0;
                                for (; ((s1.Position != s1.Length) 
                                            && (s1.ReadByte() == s2.ReadByte())); ) {
                                    ;
                                }
                                if ((s1.Position == s1.Length)) {
                                    return type;
                                }
                            }
                        }
                    }
                    finally {
                        if ((s1 != null)) {
                            s1.Close();
                        }
                        if ((s2 != null)) {
                            s2.Close();
                        }
                    }
                }
                xs.Add(dsSchema);
                return type;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetAllRegisteredStudentListByHeldInIdRow : global::System.Data.DataRow {
            
            private GetAllRegisteredStudentListByHeldInIdDataTable tableGetAllRegisteredStudentListByHeldInId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetAllRegisteredStudentListByHeldInIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetAllRegisteredStudentListByHeldInId = ((GetAllRegisteredStudentListByHeldInIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShortName {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.ShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortName\' in table \'GetAllRegisteredStudentListByHeldInId\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.ShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdmissionSession {
                get {
                    return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.AdmissionSessionColumn]));
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.AdmissionSessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Roll {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.RollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll\' in table \'GetAllRegisteredStudentListByHeldInId\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.RollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'GetAllRegisteredStudentListByHeldInId\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FormalCode {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.FormalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormalCode\' in table \'GetAllRegisteredStudentListByHeldInId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.FormalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VersionCode {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.VersionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VersionCode\' in table \'GetAllRegisteredStudentListByHeldInI" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.VersionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'GetAllRegisteredStudentListByHeldInId\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CourseCredit {
                get {
                    return ((decimal)(this[this.tableGetAllRegisteredStudentListByHeldInId.CourseCreditColumn]));
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.CourseCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SectionName {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.SectionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SectionName\' in table \'GetAllRegisteredStudentListByHeldInI" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.SectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RetakeNo {
                get {
                    return ((int)(this[this.tableGetAllRegisteredStudentListByHeldInId.RetakeNoColumn]));
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.RetakeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CourseType {
                get {
                    return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.CourseTypeColumn]));
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.CourseTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StudentType {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.StudentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentType\' in table \'GetAllRegisteredStudentListByHeldInI" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.StudentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HallCode {
                get {
                    return ((string)(this[this.tableGetAllRegisteredStudentListByHeldInId.HallCodeColumn]));
                }
                set {
                    this[this.tableGetAllRegisteredStudentListByHeldInId.HallCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortNameNull() {
                return this.IsNull(this.tableGetAllRegisteredStudentListByHeldInId.ShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortNameNull() {
                this[this.tableGetAllRegisteredStudentListByHeldInId.ShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRollNull() {
                return this.IsNull(this.tableGetAllRegisteredStudentListByHeldInId.RollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRollNull() {
                this[this.tableGetAllRegisteredStudentListByHeldInId.RollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableGetAllRegisteredStudentListByHeldInId.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tableGetAllRegisteredStudentListByHeldInId.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFormalCodeNull() {
                return this.IsNull(this.tableGetAllRegisteredStudentListByHeldInId.FormalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFormalCodeNull() {
                this[this.tableGetAllRegisteredStudentListByHeldInId.FormalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionCodeNull() {
                return this.IsNull(this.tableGetAllRegisteredStudentListByHeldInId.VersionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionCodeNull() {
                this[this.tableGetAllRegisteredStudentListByHeldInId.VersionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTitleNull() {
                return this.IsNull(this.tableGetAllRegisteredStudentListByHeldInId.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTitleNull() {
                this[this.tableGetAllRegisteredStudentListByHeldInId.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSectionNameNull() {
                return this.IsNull(this.tableGetAllRegisteredStudentListByHeldInId.SectionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSectionNameNull() {
                this[this.tableGetAllRegisteredStudentListByHeldInId.SectionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStudentTypeNull() {
                return this.IsNull(this.tableGetAllRegisteredStudentListByHeldInId.StudentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStudentTypeNull() {
                this[this.tableGetAllRegisteredStudentListByHeldInId.StudentTypeColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetSectionCommitteeInformationBySectionIdRow : global::System.Data.DataRow {
            
            private GetSectionCommitteeInformationBySectionIdDataTable tableGetSectionCommitteeInformationBySectionId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetSectionCommitteeInformationBySectionIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetSectionCommitteeInformationBySectionId = ((GetSectionCommitteeInformationBySectionIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int AcaCal_SectionID {
                get {
                    return ((int)(this[this.tableGetSectionCommitteeInformationBySectionId.AcaCal_SectionIDColumn]));
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.AcaCal_SectionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FormalCode {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.FormalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormalCode\' in table \'GetSectionCommitteeInformationBySecti" +
                                "onId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.FormalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VersionCode {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.VersionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VersionCode\' in table \'GetSectionCommitteeInformationBySect" +
                                "ionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.VersionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'GetSectionCommitteeInformationBySectionId\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Credits {
                get {
                    try {
                        return ((decimal)(this[this.tableGetSectionCommitteeInformationBySectionId.CreditsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credits\' in table \'GetSectionCommitteeInformationBySectionI" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.CreditsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SectionName {
                get {
                    return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.SectionNameColumn]));
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.SectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int HeldInRelationId {
                get {
                    try {
                        return ((int)(this[this.tableGetSectionCommitteeInformationBySectionId.HeldInRelationIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HeldInRelationId\' in table \'GetSectionCommitteeInformationB" +
                                "ySectionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.HeldInRelationIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TypeDefinitionID {
                get {
                    try {
                        return ((int)(this[this.tableGetSectionCommitteeInformationBySectionId.TypeDefinitionIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TypeDefinitionID\' in table \'GetSectionCommitteeInformationB" +
                                "ySectionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.TypeDefinitionIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Chairman {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.ChairmanColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Chairman\' in table \'GetSectionCommitteeInformationBySection" +
                                "Id\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.ChairmanColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChairmanBangla {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.ChairmanBanglaColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChairmanBangla\' in table \'GetSectionCommitteeInformationByS" +
                                "ectionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.ChairmanBanglaColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ChairmanEnglish {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.ChairmanEnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ChairmanEnglish\' in table \'GetSectionCommitteeInformationBy" +
                                "SectionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.ChairmanEnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ex1Code {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.Ex1CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ex1Code\' in table \'GetSectionCommitteeInformationBySectionI" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.Ex1CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ex1BanglaName {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.Ex1BanglaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ex1BanglaName\' in table \'GetSectionCommitteeInformationBySe" +
                                "ctionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.Ex1BanglaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ex1English {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.Ex1EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ex1English\' in table \'GetSectionCommitteeInformationBySecti" +
                                "onId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.Ex1EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ex2Code {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.Ex2CodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ex2Code\' in table \'GetSectionCommitteeInformationBySectionI" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.Ex2CodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ex2BanglaName {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.Ex2BanglaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ex2BanglaName\' in table \'GetSectionCommitteeInformationBySe" +
                                "ctionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.Ex2BanglaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Ex2English {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.Ex2EnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Ex2English\' in table \'GetSectionCommitteeInformationBySecti" +
                                "onId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.Ex2EnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExternalName {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.ExternalNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExternalName\' in table \'GetSectionCommitteeInformationBySec" +
                                "tionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.ExternalNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CTCode {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.CTCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTCode\' in table \'GetSectionCommitteeInformationBySectionId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.CTCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CTBanglaName {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.CTBanglaNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTBanglaName\' in table \'GetSectionCommitteeInformationBySec" +
                                "tionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.CTBanglaNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CTEnglish {
                get {
                    try {
                        return ((string)(this[this.tableGetSectionCommitteeInformationBySectionId.CTEnglishColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CTEnglish\' in table \'GetSectionCommitteeInformationBySectio" +
                                "nId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetSectionCommitteeInformationBySectionId.CTEnglishColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFormalCodeNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.FormalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFormalCodeNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.FormalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionCodeNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.VersionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionCodeNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.VersionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTitleNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTitleNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditsNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.CreditsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditsNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.CreditsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHeldInRelationIdNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.HeldInRelationIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHeldInRelationIdNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.HeldInRelationIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTypeDefinitionIDNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.TypeDefinitionIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTypeDefinitionIDNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.TypeDefinitionIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChairmanNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.ChairmanColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChairmanNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.ChairmanColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChairmanBanglaNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.ChairmanBanglaColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChairmanBanglaNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.ChairmanBanglaColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsChairmanEnglishNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.ChairmanEnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetChairmanEnglishNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.ChairmanEnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEx1CodeNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.Ex1CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEx1CodeNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.Ex1CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEx1BanglaNameNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.Ex1BanglaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEx1BanglaNameNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.Ex1BanglaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEx1EnglishNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.Ex1EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEx1EnglishNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.Ex1EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEx2CodeNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.Ex2CodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEx2CodeNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.Ex2CodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEx2BanglaNameNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.Ex2BanglaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEx2BanglaNameNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.Ex2BanglaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsEx2EnglishNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.Ex2EnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetEx2EnglishNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.Ex2EnglishColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExternalNameNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.ExternalNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExternalNameNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.ExternalNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCTCodeNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.CTCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCTCodeNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.CTCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCTBanglaNameNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.CTBanglaNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCTBanglaNameNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.CTBanglaNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCTEnglishNull() {
                return this.IsNull(this.tableGetSectionCommitteeInformationBySectionId.CTEnglishColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCTEnglishNull() {
                this[this.tableGetSectionCommitteeInformationBySectionId.CTEnglishColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetExamMarkDetailsBySectionIdRow : global::System.Data.DataRow {
            
            private GetExamMarkDetailsBySectionIdDataTable tableGetExamMarkDetailsBySectionId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetExamMarkDetailsBySectionIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetExamMarkDetailsBySectionId = ((GetExamMarkDetailsBySectionIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StudentID {
                get {
                    try {
                        return ((int)(this[this.tableGetExamMarkDetailsBySectionId.StudentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentID\' in table \'GetExamMarkDetailsBySectionId\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Roll {
                get {
                    try {
                        return ((string)(this[this.tableGetExamMarkDetailsBySectionId.RollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll\' in table \'GetExamMarkDetailsBySectionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.RollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableGetExamMarkDetailsBySectionId.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'GetExamMarkDetailsBySectionId\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CourseCredit {
                get {
                    return ((decimal)(this[this.tableGetExamMarkDetailsBySectionId.CourseCreditColumn]));
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.CourseCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExamMarkDetailId {
                get {
                    try {
                        return ((int)(this[this.tableGetExamMarkDetailsBySectionId.ExamMarkDetailIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamMarkDetailId\' in table \'GetExamMarkDetailsBySectionId\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.ExamMarkDetailIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Marks {
                get {
                    try {
                        return ((decimal)(this[this.tableGetExamMarkDetailsBySectionId.MarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marks\' in table \'GetExamMarkDetailsBySectionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.MarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExamTemplateItemId {
                get {
                    return ((int)(this[this.tableGetExamMarkDetailsBySectionId.ExamTemplateItemIdColumn]));
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.ExamTemplateItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ColumnSequence {
                get {
                    return ((int)(this[this.tableGetExamMarkDetailsBySectionId.ColumnSequenceColumn]));
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.ColumnSequenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExamName {
                get {
                    try {
                        return ((string)(this[this.tableGetExamMarkDetailsBySectionId.ExamNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamName\' in table \'GetExamMarkDetailsBySectionId\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.ExamNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExamMark {
                get {
                    try {
                        return ((decimal)(this[this.tableGetExamMarkDetailsBySectionId.ExamMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamMark\' in table \'GetExamMarkDetailsBySectionId\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.ExamMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ObtainedMark {
                get {
                    try {
                        return ((decimal)(this[this.tableGetExamMarkDetailsBySectionId.ObtainedMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObtainedMark\' in table \'GetExamMarkDetailsBySectionId\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.ObtainedMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PublishGrade {
                get {
                    try {
                        return ((string)(this[this.tableGetExamMarkDetailsBySectionId.PublishGradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PublishGrade\' in table \'GetExamMarkDetailsBySectionId\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.PublishGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExamType {
                get {
                    return ((string)(this[this.tableGetExamMarkDetailsBySectionId.ExamTypeColumn]));
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.ExamTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ObtainedGrade {
                get {
                    try {
                        return ((string)(this[this.tableGetExamMarkDetailsBySectionId.ObtainedGradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObtainedGrade\' in table \'GetExamMarkDetailsBySectionId\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.ObtainedGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GradePoint {
                get {
                    try {
                        return ((decimal)(this[this.tableGetExamMarkDetailsBySectionId.GradePointColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GradePoint\' in table \'GetExamMarkDetailsBySectionId\' is DBN" +
                                "ull.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.GradePointColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PointSecured {
                get {
                    try {
                        return ((decimal)(this[this.tableGetExamMarkDetailsBySectionId.PointSecuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointSecured\' in table \'GetExamMarkDetailsBySectionId\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.PointSecuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalMark {
                get {
                    try {
                        return ((decimal)(this[this.tableGetExamMarkDetailsBySectionId.TotalMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalMark\' in table \'GetExamMarkDetailsBySectionId\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetExamMarkDetailsBySectionId.TotalMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStudentIDNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.StudentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStudentIDNull() {
                this[this.tableGetExamMarkDetailsBySectionId.StudentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRollNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.RollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRollNull() {
                this[this.tableGetExamMarkDetailsBySectionId.RollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tableGetExamMarkDetailsBySectionId.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExamMarkDetailIdNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.ExamMarkDetailIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExamMarkDetailIdNull() {
                this[this.tableGetExamMarkDetailsBySectionId.ExamMarkDetailIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarksNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.MarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarksNull() {
                this[this.tableGetExamMarkDetailsBySectionId.MarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExamNameNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.ExamNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExamNameNull() {
                this[this.tableGetExamMarkDetailsBySectionId.ExamNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExamMarkNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.ExamMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExamMarkNull() {
                this[this.tableGetExamMarkDetailsBySectionId.ExamMarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObtainedMarkNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.ObtainedMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObtainedMarkNull() {
                this[this.tableGetExamMarkDetailsBySectionId.ObtainedMarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublishGradeNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.PublishGradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublishGradeNull() {
                this[this.tableGetExamMarkDetailsBySectionId.PublishGradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObtainedGradeNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.ObtainedGradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObtainedGradeNull() {
                this[this.tableGetExamMarkDetailsBySectionId.ObtainedGradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGradePointNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.GradePointColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGradePointNull() {
                this[this.tableGetExamMarkDetailsBySectionId.GradePointColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPointSecuredNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.PointSecuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPointSecuredNull() {
                this[this.tableGetExamMarkDetailsBySectionId.PointSecuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalMarkNull() {
                return this.IsNull(this.tableGetExamMarkDetailsBySectionId.TotalMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalMarkNull() {
                this[this.tableGetExamMarkDetailsBySectionId.TotalMarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetTabulationSheetDataByHeldInIdRow : global::System.Data.DataRow {
            
            private GetTabulationSheetDataByHeldInIdDataTable tableGetTabulationSheetDataByHeldInId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetTabulationSheetDataByHeldInIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetTabulationSheetDataByHeldInId = ((GetTabulationSheetDataByHeldInIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tableGetTabulationSheetDataByHeldInId.StudentIDColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Roll {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInId.RollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll\' in table \'GetTabulationSheetDataByHeldInId\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.RollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInId.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'GetTabulationSheetDataByHeldInId\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FormalCode {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInId.FormalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormalCode\' in table \'GetTabulationSheetDataByHeldInId\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.FormalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VersionCode {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInId.VersionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VersionCode\' in table \'GetTabulationSheetDataByHeldInId\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.VersionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInId.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'GetTabulationSheetDataByHeldInId\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CourseCredit {
                get {
                    return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInId.CourseCreditColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.CourseCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ObtainedTotalMarks {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInId.ObtainedTotalMarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObtainedTotalMarks\' in table \'GetTabulationSheetDataByHeldI" +
                                "nId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.ObtainedTotalMarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ObtainedGrade {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInId.ObtainedGradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObtainedGrade\' in table \'GetTabulationSheetDataByHeldInId\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.ObtainedGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ObtainedGPA {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInId.ObtainedGPAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObtainedGPA\' in table \'GetTabulationSheetDataByHeldInId\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.ObtainedGPAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PointSecured {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInId.PointSecuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointSecured\' in table \'GetTabulationSheetDataByHeldInId\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.PointSecuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalPointSecured {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInId.TotalPointSecuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPointSecured\' in table \'GetTabulationSheetDataByHeldIn" +
                                "Id\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.TotalPointSecuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CreditTaken {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInId.CreditTakenColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditTaken\' in table \'GetTabulationSheetDataByHeldInId\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.CreditTakenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CreditEarned {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInId.CreditEarnedColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'CreditEarned\' in table \'GetTabulationSheetDataByHeldInId\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.CreditEarnedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GPA {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInId.GPAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GPA\' in table \'GetTabulationSheetDataByHeldInId\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.GPAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableGetTabulationSheetDataByHeldInId.IDColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hall {
                get {
                    return ((string)(this[this.tableGetTabulationSheetDataByHeldInId.HallColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInId.HallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRollNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.RollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRollNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.RollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFormalCodeNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.FormalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFormalCodeNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.FormalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionCodeNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.VersionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionCodeNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.VersionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTitleNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTitleNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObtainedTotalMarksNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.ObtainedTotalMarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObtainedTotalMarksNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.ObtainedTotalMarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObtainedGradeNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.ObtainedGradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObtainedGradeNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.ObtainedGradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObtainedGPANull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.ObtainedGPAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObtainedGPANull() {
                this[this.tableGetTabulationSheetDataByHeldInId.ObtainedGPAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPointSecuredNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.PointSecuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPointSecuredNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.PointSecuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPointSecuredNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.TotalPointSecuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPointSecuredNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.TotalPointSecuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditTakenNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.CreditTakenColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditTakenNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.CreditTakenColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditEarnedNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.CreditEarnedColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditEarnedNull() {
                this[this.tableGetTabulationSheetDataByHeldInId.CreditEarnedColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGPANull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInId.GPAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGPANull() {
                this[this.tableGetTabulationSheetDataByHeldInId.GPAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow : global::System.Data.DataRow {
            
            private GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId = ((GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Roll {
                get {
                    return ((string)(this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.RollColumn]));
                }
                set {
                    this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.RollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'GetFirstSecondAndThirdExaminerMarkDetai" +
                                "lsBySectionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal InternalMark {
                get {
                    return ((decimal)(this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.InternalMarkColumn]));
                }
                set {
                    this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.InternalMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExternalMark {
                get {
                    return ((decimal)(this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.ExternalMarkColumn]));
                }
                set {
                    this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.ExternalMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ThirdMark {
                get {
                    return ((decimal)(this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.ThirdMarkColumn]));
                }
                set {
                    this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.ThirdMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Average {
                get {
                    try {
                        return ((decimal)(this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.AverageColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Average\' in table \'GetFirstSecondAndThirdExaminerMarkDetail" +
                                "sBySectionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.AverageColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAverageNull() {
                return this.IsNull(this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.AverageColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAverageNull() {
                this[this.tableGetFirstSecondAndThirdExaminerMarkDetailsBySectionId.AverageColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetAllRollSheetStudentListByHeldInIdRow : global::System.Data.DataRow {
            
            private GetAllRollSheetStudentListByHeldInIdDataTable tableGetAllRollSheetStudentListByHeldInId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetAllRollSheetStudentListByHeldInIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetAllRollSheetStudentListByHeldInId = ((GetAllRollSheetStudentListByHeldInIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableGetAllRollSheetStudentListByHeldInId.IDColumn]));
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tableGetAllRollSheetStudentListByHeldInId.StudentIDColumn]));
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ShortName {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.ShortNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ShortName\' in table \'GetAllRollSheetStudentListByHeldInId\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.ShortNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AdmissionSession {
                get {
                    return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.AdmissionSessionColumn]));
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.AdmissionSessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Roll {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.RollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll\' in table \'GetAllRollSheetStudentListByHeldInId\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.RollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'GetAllRollSheetStudentListByHeldInId\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HallCode {
                get {
                    return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.HallCodeColumn]));
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.HallCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FormalCode {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.FormalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormalCode\' in table \'GetAllRollSheetStudentListByHeldInId\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.FormalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VersionCode {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.VersionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VersionCode\' in table \'GetAllRollSheetStudentListByHeldInId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.VersionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'GetAllRollSheetStudentListByHeldInId\' is D" +
                                "BNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CourseCredit {
                get {
                    return ((decimal)(this[this.tableGetAllRollSheetStudentListByHeldInId.CourseCreditColumn]));
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.CourseCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SectionName {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.SectionNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SectionName\' in table \'GetAllRollSheetStudentListByHeldInId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.SectionNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RetakeNo {
                get {
                    return ((int)(this[this.tableGetAllRollSheetStudentListByHeldInId.RetakeNoColumn]));
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.RetakeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string CourseType {
                get {
                    return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.CourseTypeColumn]));
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.CourseTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string StudentType {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.StudentTypeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentType\' in table \'GetAllRollSheetStudentListByHeldInId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.StudentTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhotoPath {
                get {
                    try {
                        return ((string)(this[this.tableGetAllRollSheetStudentListByHeldInId.PhotoPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhotoPath\' in table \'GetAllRollSheetStudentListByHeldInId\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAllRollSheetStudentListByHeldInId.PhotoPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsShortNameNull() {
                return this.IsNull(this.tableGetAllRollSheetStudentListByHeldInId.ShortNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetShortNameNull() {
                this[this.tableGetAllRollSheetStudentListByHeldInId.ShortNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRollNull() {
                return this.IsNull(this.tableGetAllRollSheetStudentListByHeldInId.RollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRollNull() {
                this[this.tableGetAllRollSheetStudentListByHeldInId.RollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableGetAllRollSheetStudentListByHeldInId.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tableGetAllRollSheetStudentListByHeldInId.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFormalCodeNull() {
                return this.IsNull(this.tableGetAllRollSheetStudentListByHeldInId.FormalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFormalCodeNull() {
                this[this.tableGetAllRollSheetStudentListByHeldInId.FormalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionCodeNull() {
                return this.IsNull(this.tableGetAllRollSheetStudentListByHeldInId.VersionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionCodeNull() {
                this[this.tableGetAllRollSheetStudentListByHeldInId.VersionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTitleNull() {
                return this.IsNull(this.tableGetAllRollSheetStudentListByHeldInId.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTitleNull() {
                this[this.tableGetAllRollSheetStudentListByHeldInId.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSectionNameNull() {
                return this.IsNull(this.tableGetAllRollSheetStudentListByHeldInId.SectionNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSectionNameNull() {
                this[this.tableGetAllRollSheetStudentListByHeldInId.SectionNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStudentTypeNull() {
                return this.IsNull(this.tableGetAllRollSheetStudentListByHeldInId.StudentTypeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStudentTypeNull() {
                this[this.tableGetAllRollSheetStudentListByHeldInId.StudentTypeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhotoPathNull() {
                return this.IsNull(this.tableGetAllRollSheetStudentListByHeldInId.PhotoPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhotoPathNull() {
                this[this.tableGetAllRollSheetStudentListByHeldInId.PhotoPathColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetAdmitCardDataByHeldInIdRow : global::System.Data.DataRow {
            
            private GetAdmitCardDataByHeldInIdDataTable tableGetAdmitCardDataByHeldInId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetAdmitCardDataByHeldInIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetAdmitCardDataByHeldInId = ((GetAdmitCardDataByHeldInIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string DetailedName {
                get {
                    try {
                        return ((string)(this[this.tableGetAdmitCardDataByHeldInId.DetailedNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'DetailedName\' in table \'GetAdmitCardDataByHeldInId\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.DetailedNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StudentID {
                get {
                    try {
                        return ((int)(this[this.tableGetAdmitCardDataByHeldInId.StudentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentID\' in table \'GetAdmitCardDataByHeldInId\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Roll {
                get {
                    try {
                        return ((string)(this[this.tableGetAdmitCardDataByHeldInId.RollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll\' in table \'GetAdmitCardDataByHeldInId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.RollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableGetAdmitCardDataByHeldInId.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'GetAdmitCardDataByHeldInId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FatherName {
                get {
                    try {
                        return ((string)(this[this.tableGetAdmitCardDataByHeldInId.FatherNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FatherName\' in table \'GetAdmitCardDataByHeldInId\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.FatherNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string HallName {
                get {
                    try {
                        return ((string)(this[this.tableGetAdmitCardDataByHeldInId.HallNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'HallName\' in table \'GetAdmitCardDataByHeldInId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.HallNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Session {
                get {
                    try {
                        return ((string)(this[this.tableGetAdmitCardDataByHeldInId.SessionColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Session\' in table \'GetAdmitCardDataByHeldInId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.SessionColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public long TempSLNo {
                get {
                    try {
                        return ((long)(this[this.tableGetAdmitCardDataByHeldInId.TempSLNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TempSLNo\' in table \'GetAdmitCardDataByHeldInId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.TempSLNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int RetakeNo {
                get {
                    try {
                        return ((int)(this[this.tableGetAdmitCardDataByHeldInId.RetakeNoColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'RetakeNo\' in table \'GetAdmitCardDataByHeldInId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.RetakeNoColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FormalCode {
                get {
                    try {
                        return ((string)(this[this.tableGetAdmitCardDataByHeldInId.FormalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormalCode\' in table \'GetAdmitCardDataByHeldInId\' is DBNull" +
                                ".", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.FormalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VersionCode {
                get {
                    try {
                        return ((string)(this[this.tableGetAdmitCardDataByHeldInId.VersionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VersionCode\' in table \'GetAdmitCardDataByHeldInId\' is DBNul" +
                                "l.", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.VersionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGetAdmitCardDataByHeldInId.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'GetAdmitCardDataByHeldInId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Credits {
                get {
                    try {
                        return ((decimal)(this[this.tableGetAdmitCardDataByHeldInId.CreditsColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Credits\' in table \'GetAdmitCardDataByHeldInId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.CreditsColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PhotoPath {
                get {
                    try {
                        return ((string)(this[this.tableGetAdmitCardDataByHeldInId.PhotoPathColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PhotoPath\' in table \'GetAdmitCardDataByHeldInId\' is DBNull." +
                                "", e);
                    }
                }
                set {
                    this[this.tableGetAdmitCardDataByHeldInId.PhotoPathColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsDetailedNameNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.DetailedNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetDetailedNameNull() {
                this[this.tableGetAdmitCardDataByHeldInId.DetailedNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStudentIDNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.StudentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStudentIDNull() {
                this[this.tableGetAdmitCardDataByHeldInId.StudentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRollNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.RollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRollNull() {
                this[this.tableGetAdmitCardDataByHeldInId.RollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tableGetAdmitCardDataByHeldInId.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFatherNameNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.FatherNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFatherNameNull() {
                this[this.tableGetAdmitCardDataByHeldInId.FatherNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsHallNameNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.HallNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetHallNameNull() {
                this[this.tableGetAdmitCardDataByHeldInId.HallNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSessionNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.SessionColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSessionNull() {
                this[this.tableGetAdmitCardDataByHeldInId.SessionColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTempSLNoNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.TempSLNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTempSLNoNull() {
                this[this.tableGetAdmitCardDataByHeldInId.TempSLNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRetakeNoNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.RetakeNoColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRetakeNoNull() {
                this[this.tableGetAdmitCardDataByHeldInId.RetakeNoColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFormalCodeNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.FormalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFormalCodeNull() {
                this[this.tableGetAdmitCardDataByHeldInId.FormalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionCodeNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.VersionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionCodeNull() {
                this[this.tableGetAdmitCardDataByHeldInId.VersionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTitleNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTitleNull() {
                this[this.tableGetAdmitCardDataByHeldInId.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsCreditsNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.CreditsColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetCreditsNull() {
                this[this.tableGetAdmitCardDataByHeldInId.CreditsColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPhotoPathNull() {
                return this.IsNull(this.tableGetAdmitCardDataByHeldInId.PhotoPathColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPhotoPathNull() {
                this[this.tableGetAdmitCardDataByHeldInId.PhotoPathColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetContinuousExamMarkDetailsBySectionIdRow : global::System.Data.DataRow {
            
            private GetContinuousExamMarkDetailsBySectionIdDataTable tableGetContinuousExamMarkDetailsBySectionId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetContinuousExamMarkDetailsBySectionIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetContinuousExamMarkDetailsBySectionId = ((GetContinuousExamMarkDetailsBySectionIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StudentID {
                get {
                    try {
                        return ((int)(this[this.tableGetContinuousExamMarkDetailsBySectionId.StudentIDColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'StudentID\' in table \'GetContinuousExamMarkDetailsBySectionI" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Roll {
                get {
                    try {
                        return ((string)(this[this.tableGetContinuousExamMarkDetailsBySectionId.RollColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Roll\' in table \'GetContinuousExamMarkDetailsBySectionId\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.RollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableGetContinuousExamMarkDetailsBySectionId.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'GetContinuousExamMarkDetailsBySectionId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CourseCredit {
                get {
                    return ((decimal)(this[this.tableGetContinuousExamMarkDetailsBySectionId.CourseCreditColumn]));
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.CourseCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExamMarkDetailId {
                get {
                    try {
                        return ((int)(this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamMarkDetailIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamMarkDetailId\' in table \'GetContinuousExamMarkDetailsByS" +
                                "ectionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamMarkDetailIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal Marks {
                get {
                    try {
                        return ((decimal)(this[this.tableGetContinuousExamMarkDetailsBySectionId.MarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Marks\' in table \'GetContinuousExamMarkDetailsBySectionId\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.MarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ExamTemplateItemId {
                get {
                    return ((int)(this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamTemplateItemIdColumn]));
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamTemplateItemIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ColumnSequence {
                get {
                    return ((int)(this[this.tableGetContinuousExamMarkDetailsBySectionId.ColumnSequenceColumn]));
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.ColumnSequenceColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExamName {
                get {
                    try {
                        return ((string)(this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamName\' in table \'GetContinuousExamMarkDetailsBySectionId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ExamMark {
                get {
                    try {
                        return ((decimal)(this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ExamMark\' in table \'GetContinuousExamMarkDetailsBySectionId" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ObtainedMark {
                get {
                    try {
                        return ((decimal)(this[this.tableGetContinuousExamMarkDetailsBySectionId.ObtainedMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObtainedMark\' in table \'GetContinuousExamMarkDetailsBySecti" +
                                "onId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.ObtainedMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PublishGrade {
                get {
                    try {
                        return ((string)(this[this.tableGetContinuousExamMarkDetailsBySectionId.PublishGradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PublishGrade\' in table \'GetContinuousExamMarkDetailsBySecti" +
                                "onId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.PublishGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ExamType {
                get {
                    return ((string)(this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamTypeColumn]));
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamTypeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SessionWithReAdd {
                get {
                    return ((string)(this[this.tableGetContinuousExamMarkDetailsBySectionId.SessionWithReAddColumn]));
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.SessionWithReAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReAddStatus {
                get {
                    return ((int)(this[this.tableGetContinuousExamMarkDetailsBySectionId.ReAddStatusColumn]));
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.ReAddStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ObtainedGrade {
                get {
                    try {
                        return ((string)(this[this.tableGetContinuousExamMarkDetailsBySectionId.ObtainedGradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObtainedGrade\' in table \'GetContinuousExamMarkDetailsBySect" +
                                "ionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.ObtainedGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GradePoint {
                get {
                    return ((decimal)(this[this.tableGetContinuousExamMarkDetailsBySectionId.GradePointColumn]));
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.GradePointColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PointSecured {
                get {
                    try {
                        return ((decimal)(this[this.tableGetContinuousExamMarkDetailsBySectionId.PointSecuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointSecured\' in table \'GetContinuousExamMarkDetailsBySecti" +
                                "onId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.PointSecuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalMark {
                get {
                    try {
                        return ((decimal)(this[this.tableGetContinuousExamMarkDetailsBySectionId.TotalMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalMark\' in table \'GetContinuousExamMarkDetailsBySectionI" +
                                "d\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetContinuousExamMarkDetailsBySectionId.TotalMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsStudentIDNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.StudentIDColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetStudentIDNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.StudentIDColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsRollNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.RollColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetRollNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.RollColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExamMarkDetailIdNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.ExamMarkDetailIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExamMarkDetailIdNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamMarkDetailIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarksNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.MarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarksNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.MarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExamNameNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.ExamNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExamNameNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsExamMarkNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.ExamMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetExamMarkNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.ExamMarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObtainedMarkNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.ObtainedMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObtainedMarkNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.ObtainedMarkColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPublishGradeNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.PublishGradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPublishGradeNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.PublishGradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObtainedGradeNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.ObtainedGradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObtainedGradeNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.ObtainedGradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPointSecuredNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.PointSecuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPointSecuredNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.PointSecuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalMarkNull() {
                return this.IsNull(this.tableGetContinuousExamMarkDetailsBySectionId.TotalMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalMarkNull() {
                this[this.tableGetContinuousExamMarkDetailsBySectionId.TotalMarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetTopSheetStudentListBySectionIdRow : global::System.Data.DataRow {
            
            private GetTopSheetStudentListBySectionIdDataTable tableGetTopSheetStudentListBySectionId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetTopSheetStudentListBySectionIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetTopSheetStudentListBySectionId = ((GetTopSheetStudentListBySectionIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int SectionId {
                get {
                    try {
                        return ((int)(this[this.tableGetTopSheetStudentListBySectionId.SectionIdColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'SectionId\' in table \'GetTopSheetStudentListBySectionId\' is " +
                                "DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTopSheetStudentListBySectionId.SectionIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalStudent {
                get {
                    try {
                        return ((int)(this[this.tableGetTopSheetStudentListBySectionId.TotalStudentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalStudent\' in table \'GetTopSheetStudentListBySectionId\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTopSheetStudentListBySectionId.TotalStudentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int TotalPresent {
                get {
                    try {
                        return ((int)(this[this.tableGetTopSheetStudentListBySectionId.TotalPresentColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalPresent\' in table \'GetTopSheetStudentListBySectionId\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTopSheetStudentListBySectionId.TotalPresentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Total {
                get {
                    try {
                        return ((int)(this[this.tableGetTopSheetStudentListBySectionId.TotalColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Total\' in table \'GetTopSheetStudentListBySectionId\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetTopSheetStudentListBySectionId.TotalColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string PresentList {
                get {
                    try {
                        return ((string)(this[this.tableGetTopSheetStudentListBySectionId.PresentListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PresentList\' in table \'GetTopSheetStudentListBySectionId\' i" +
                                "s DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTopSheetStudentListBySectionId.PresentListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string AbsentList {
                get {
                    try {
                        return ((string)(this[this.tableGetTopSheetStudentListBySectionId.AbsentListColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'AbsentList\' in table \'GetTopSheetStudentListBySectionId\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTopSheetStudentListBySectionId.AbsentListColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsSectionIdNull() {
                return this.IsNull(this.tableGetTopSheetStudentListBySectionId.SectionIdColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetSectionIdNull() {
                this[this.tableGetTopSheetStudentListBySectionId.SectionIdColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalStudentNull() {
                return this.IsNull(this.tableGetTopSheetStudentListBySectionId.TotalStudentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalStudentNull() {
                this[this.tableGetTopSheetStudentListBySectionId.TotalStudentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalPresentNull() {
                return this.IsNull(this.tableGetTopSheetStudentListBySectionId.TotalPresentColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalPresentNull() {
                this[this.tableGetTopSheetStudentListBySectionId.TotalPresentColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalNull() {
                return this.IsNull(this.tableGetTopSheetStudentListBySectionId.TotalColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalNull() {
                this[this.tableGetTopSheetStudentListBySectionId.TotalColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPresentListNull() {
                return this.IsNull(this.tableGetTopSheetStudentListBySectionId.PresentListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPresentListNull() {
                this[this.tableGetTopSheetStudentListBySectionId.PresentListColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsAbsentListNull() {
                return this.IsNull(this.tableGetTopSheetStudentListBySectionId.AbsentListColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetAbsentListNull() {
                this[this.tableGetTopSheetStudentListBySectionId.AbsentListColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetFirstExaminerFinalAssessmentMarkBySectionIdRow : global::System.Data.DataRow {
            
            private GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable tableGetFirstExaminerFinalAssessmentMarkBySectionId;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetFirstExaminerFinalAssessmentMarkBySectionIdRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetFirstExaminerFinalAssessmentMarkBySectionId = ((GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.StudentIDColumn]));
                }
                set {
                    this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StudentAdmissionAcaCalId {
                get {
                    return ((int)(this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.StudentAdmissionAcaCalIdColumn]));
                }
                set {
                    this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.StudentAdmissionAcaCalIdColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Roll {
                get {
                    return ((string)(this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.RollColumn]));
                }
                set {
                    this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.RollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'GetFirstExaminerFinalAssessmentMarkBySe" +
                                "ctionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal MarkDiff {
                get {
                    try {
                        return ((decimal)(this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.MarkDiffColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'MarkDiff\' in table \'GetFirstExaminerFinalAssessmentMarkBySe" +
                                "ctionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.MarkDiffColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalMark {
                get {
                    try {
                        return ((decimal)(this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.TotalMarkColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'TotalMark\' in table \'GetFirstExaminerFinalAssessmentMarkByS" +
                                "ectionId\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.TotalMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SessionWithReAdd {
                get {
                    return ((string)(this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.SessionWithReAddColumn]));
                }
                set {
                    this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.SessionWithReAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReAddStatus {
                get {
                    return ((int)(this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.ReAddStatusColumn]));
                }
                set {
                    this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.ReAddStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsMarkDiffNull() {
                return this.IsNull(this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.MarkDiffColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetMarkDiffNull() {
                this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.MarkDiffColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTotalMarkNull() {
                return this.IsNull(this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.TotalMarkColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTotalMarkNull() {
                this[this.tableGetFirstExaminerFinalAssessmentMarkBySectionId.TotalMarkColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Represents strongly named DataRow class.
        ///</summary>
        public partial class GetTabulationSheetDataByHeldInIdNewRow : global::System.Data.DataRow {
            
            private GetTabulationSheetDataByHeldInIdNewDataTable tableGetTabulationSheetDataByHeldInIdNew;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal GetTabulationSheetDataByHeldInIdNewRow(global::System.Data.DataRowBuilder rb) : 
                    base(rb) {
                this.tableGetTabulationSheetDataByHeldInIdNew = ((GetTabulationSheetDataByHeldInIdNewDataTable)(this.Table));
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ID {
                get {
                    return ((int)(this[this.tableGetTabulationSheetDataByHeldInIdNew.IDColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.IDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int StudentID {
                get {
                    return ((int)(this[this.tableGetTabulationSheetDataByHeldInIdNew.StudentIDColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.StudentIDColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Roll {
                get {
                    return ((string)(this[this.tableGetTabulationSheetDataByHeldInIdNew.RollColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.RollColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FullName {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInIdNew.FullNameColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FullName\' in table \'GetTabulationSheetDataByHeldInIdNew\' is" +
                                " DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.FullNameColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Hall {
                get {
                    return ((string)(this[this.tableGetTabulationSheetDataByHeldInIdNew.HallColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.HallColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string FormalCode {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInIdNew.FormalCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'FormalCode\' in table \'GetTabulationSheetDataByHeldInIdNew\' " +
                                "is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.FormalCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string VersionCode {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInIdNew.VersionCodeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'VersionCode\' in table \'GetTabulationSheetDataByHeldInIdNew\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.VersionCodeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string Title {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInIdNew.TitleColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'Title\' in table \'GetTabulationSheetDataByHeldInIdNew\' is DB" +
                                "Null.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.TitleColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CourseCredit {
                get {
                    return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInIdNew.CourseCreditColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.CourseCreditColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ObtainedTotalMarks {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedTotalMarksColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObtainedTotalMarks\' in table \'GetTabulationSheetDataByHeldI" +
                                "nIdNew\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedTotalMarksColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string ObtainedGrade {
                get {
                    try {
                        return ((string)(this[this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedGradeColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObtainedGrade\' in table \'GetTabulationSheetDataByHeldInIdNe" +
                                "w\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedGradeColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ObtainedGPA {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedGPAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'ObtainedGPA\' in table \'GetTabulationSheetDataByHeldInIdNew\'" +
                                " is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedGPAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal PointSecured {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInIdNew.PointSecuredColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'PointSecured\' in table \'GetTabulationSheetDataByHeldInIdNew" +
                                "\' is DBNull.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.PointSecuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public string SessionWithReAdd {
                get {
                    return ((string)(this[this.tableGetTabulationSheetDataByHeldInIdNew.SessionWithReAddColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.SessionWithReAddColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int ReAddStatus {
                get {
                    return ((int)(this[this.tableGetTabulationSheetDataByHeldInIdNew.ReAddStatusColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.ReAddStatusColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal ContinuosAssesment {
                get {
                    return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInIdNew.ContinuosAssesmentColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.ContinuosAssesmentColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal FinalMark {
                get {
                    return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInIdNew.FinalMarkColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.FinalMarkColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal TotalPointSecured {
                get {
                    return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInIdNew.TotalPointSecuredColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.TotalPointSecuredColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CreditTaken {
                get {
                    return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInIdNew.CreditTakenColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.CreditTakenColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal CreditEarned {
                get {
                    return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInIdNew.CreditEarnedColumn]));
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.CreditEarnedColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public decimal GPA {
                get {
                    try {
                        return ((decimal)(this[this.tableGetTabulationSheetDataByHeldInIdNew.GPAColumn]));
                    }
                    catch (global::System.InvalidCastException e) {
                        throw new global::System.Data.StrongTypingException("The value for column \'GPA\' in table \'GetTabulationSheetDataByHeldInIdNew\' is DBNu" +
                                "ll.", e);
                    }
                }
                set {
                    this[this.tableGetTabulationSheetDataByHeldInIdNew.GPAColumn] = value;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFullNameNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInIdNew.FullNameColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFullNameNull() {
                this[this.tableGetTabulationSheetDataByHeldInIdNew.FullNameColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsFormalCodeNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInIdNew.FormalCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetFormalCodeNull() {
                this[this.tableGetTabulationSheetDataByHeldInIdNew.FormalCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsVersionCodeNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInIdNew.VersionCodeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetVersionCodeNull() {
                this[this.tableGetTabulationSheetDataByHeldInIdNew.VersionCodeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsTitleNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInIdNew.TitleColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetTitleNull() {
                this[this.tableGetTabulationSheetDataByHeldInIdNew.TitleColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObtainedTotalMarksNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedTotalMarksColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObtainedTotalMarksNull() {
                this[this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedTotalMarksColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObtainedGradeNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedGradeColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObtainedGradeNull() {
                this[this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedGradeColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsObtainedGPANull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedGPAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetObtainedGPANull() {
                this[this.tableGetTabulationSheetDataByHeldInIdNew.ObtainedGPAColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsPointSecuredNull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInIdNew.PointSecuredColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetPointSecuredNull() {
                this[this.tableGetTabulationSheetDataByHeldInIdNew.PointSecuredColumn] = global::System.Convert.DBNull;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public bool IsGPANull() {
                return this.IsNull(this.tableGetTabulationSheetDataByHeldInIdNew.GPAColumn);
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public void SetGPANull() {
                this[this.tableGetTabulationSheetDataByHeldInIdNew.GPAColumn] = global::System.Convert.DBNull;
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetAllRegisteredStudentListByHeldInIdRowChangeEvent : global::System.EventArgs {
            
            private GetAllRegisteredStudentListByHeldInIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRegisteredStudentListByHeldInIdRowChangeEvent(GetAllRegisteredStudentListByHeldInIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRegisteredStudentListByHeldInIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetSectionCommitteeInformationBySectionIdRowChangeEvent : global::System.EventArgs {
            
            private GetSectionCommitteeInformationBySectionIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetSectionCommitteeInformationBySectionIdRowChangeEvent(GetSectionCommitteeInformationBySectionIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetSectionCommitteeInformationBySectionIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetExamMarkDetailsBySectionIdRowChangeEvent : global::System.EventArgs {
            
            private GetExamMarkDetailsBySectionIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetExamMarkDetailsBySectionIdRowChangeEvent(GetExamMarkDetailsBySectionIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetExamMarkDetailsBySectionIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetTabulationSheetDataByHeldInIdRowChangeEvent : global::System.EventArgs {
            
            private GetTabulationSheetDataByHeldInIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdRowChangeEvent(GetTabulationSheetDataByHeldInIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEvent : global::System.EventArgs {
            
            private GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRowChangeEvent(GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetAllRollSheetStudentListByHeldInIdRowChangeEvent : global::System.EventArgs {
            
            private GetAllRollSheetStudentListByHeldInIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRollSheetStudentListByHeldInIdRowChangeEvent(GetAllRollSheetStudentListByHeldInIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAllRollSheetStudentListByHeldInIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetAdmitCardDataByHeldInIdRowChangeEvent : global::System.EventArgs {
            
            private GetAdmitCardDataByHeldInIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAdmitCardDataByHeldInIdRowChangeEvent(GetAdmitCardDataByHeldInIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetAdmitCardDataByHeldInIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetContinuousExamMarkDetailsBySectionIdRowChangeEvent : global::System.EventArgs {
            
            private GetContinuousExamMarkDetailsBySectionIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetContinuousExamMarkDetailsBySectionIdRowChangeEvent(GetContinuousExamMarkDetailsBySectionIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetContinuousExamMarkDetailsBySectionIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetTopSheetStudentListBySectionIdRowChangeEvent : global::System.EventArgs {
            
            private GetTopSheetStudentListBySectionIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTopSheetStudentListBySectionIdRowChangeEvent(GetTopSheetStudentListBySectionIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTopSheetStudentListBySectionIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEvent : global::System.EventArgs {
            
            private GetFirstExaminerFinalAssessmentMarkBySectionIdRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstExaminerFinalAssessmentMarkBySectionIdRowChangeEvent(GetFirstExaminerFinalAssessmentMarkBySectionIdRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetFirstExaminerFinalAssessmentMarkBySectionIdRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
        
        /// <summary>
        ///Row event argument class
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public class GetTabulationSheetDataByHeldInIdNewRowChangeEvent : global::System.EventArgs {
            
            private GetTabulationSheetDataByHeldInIdNewRow eventRow;
            
            private global::System.Data.DataRowAction eventAction;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdNewRowChangeEvent(GetTabulationSheetDataByHeldInIdNewRow row, global::System.Data.DataRowAction action) {
                this.eventRow = row;
                this.eventAction = action;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public GetTabulationSheetDataByHeldInIdNewRow Row {
                get {
                    return this.eventRow;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public global::System.Data.DataRowAction Action {
                get {
                    return this.eventAction;
                }
            }
        }
    }
}
namespace EMS.DataSet1TableAdapters {
    
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetAllRegisteredStudentListByHeldInIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetAllRegisteredStudentListByHeldInIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetAllRegisteredStudentListByHeldInId";
            tableMapping.ColumnMappings.Add("ShortName", "ShortName");
            tableMapping.ColumnMappings.Add("AdmissionSession", "AdmissionSession");
            tableMapping.ColumnMappings.Add("Roll", "Roll");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("FormalCode", "FormalCode");
            tableMapping.ColumnMappings.Add("VersionCode", "VersionCode");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("CourseCredit", "CourseCredit");
            tableMapping.ColumnMappings.Add("SectionName", "SectionName");
            tableMapping.ColumnMappings.Add("RetakeNo", "RetakeNo");
            tableMapping.ColumnMappings.Add("CourseType", "CourseType");
            tableMapping.ColumnMappings.Add("StudentType", "StudentType");
            tableMapping.ColumnMappings.Add("HallCode", "HallCode");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetAllRegisteredStudentListByHeldInId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeldInRelationId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HallId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetAllRegisteredStudentListByHeldInIdDataTable dataTable, global::System.Nullable<int> HeldInRelationId, global::System.Nullable<int> HallId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((HeldInRelationId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(HeldInRelationId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((HallId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(HallId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetAllRegisteredStudentListByHeldInIdDataTable GetData(global::System.Nullable<int> HeldInRelationId, global::System.Nullable<int> HallId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((HeldInRelationId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(HeldInRelationId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((HallId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(HallId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DataSet1.GetAllRegisteredStudentListByHeldInIdDataTable dataTable = new DataSet1.GetAllRegisteredStudentListByHeldInIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetSectionCommitteeInformationBySectionIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetSectionCommitteeInformationBySectionIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetSectionCommitteeInformationBySectionId";
            tableMapping.ColumnMappings.Add("AcaCal_SectionID", "AcaCal_SectionID");
            tableMapping.ColumnMappings.Add("FormalCode", "FormalCode");
            tableMapping.ColumnMappings.Add("VersionCode", "VersionCode");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("Credits", "Credits");
            tableMapping.ColumnMappings.Add("SectionName", "SectionName");
            tableMapping.ColumnMappings.Add("HeldInRelationId", "HeldInRelationId");
            tableMapping.ColumnMappings.Add("TypeDefinitionID", "TypeDefinitionID");
            tableMapping.ColumnMappings.Add("Chairman", "Chairman");
            tableMapping.ColumnMappings.Add("ChairmanBangla", "ChairmanBangla");
            tableMapping.ColumnMappings.Add("ChairmanEnglish", "ChairmanEnglish");
            tableMapping.ColumnMappings.Add("Ex1Code", "Ex1Code");
            tableMapping.ColumnMappings.Add("Ex1BanglaName", "Ex1BanglaName");
            tableMapping.ColumnMappings.Add("Ex1English", "Ex1English");
            tableMapping.ColumnMappings.Add("Ex2Code", "Ex2Code");
            tableMapping.ColumnMappings.Add("Ex2BanglaName", "Ex2BanglaName");
            tableMapping.ColumnMappings.Add("Ex2English", "Ex2English");
            tableMapping.ColumnMappings.Add("ExternalName", "ExternalName");
            tableMapping.ColumnMappings.Add("CTCode", "CTCode");
            tableMapping.ColumnMappings.Add("CTBanglaName", "CTBanglaName");
            tableMapping.ColumnMappings.Add("CTEnglish", "CTEnglish");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetSectionCommitteeInformationBySectionId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcacalSectionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetSectionCommitteeInformationBySectionIdDataTable dataTable, global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetSectionCommitteeInformationBySectionIdDataTable GetData(global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.GetSectionCommitteeInformationBySectionIdDataTable dataTable = new DataSet1.GetSectionCommitteeInformationBySectionIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetExamMarkDetailsBySectionIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetExamMarkDetailsBySectionIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetExamMarkDetailsBySectionId";
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("Roll", "Roll");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("CourseCredit", "CourseCredit");
            tableMapping.ColumnMappings.Add("ExamMarkDetailId", "ExamMarkDetailId");
            tableMapping.ColumnMappings.Add("Marks", "Marks");
            tableMapping.ColumnMappings.Add("ExamTemplateItemId", "ExamTemplateItemId");
            tableMapping.ColumnMappings.Add("ColumnSequence", "ColumnSequence");
            tableMapping.ColumnMappings.Add("ExamName", "ExamName");
            tableMapping.ColumnMappings.Add("ExamMark", "ExamMark");
            tableMapping.ColumnMappings.Add("ObtainedMark", "ObtainedMark");
            tableMapping.ColumnMappings.Add("PublishGrade", "PublishGrade");
            tableMapping.ColumnMappings.Add("ExamType", "ExamType");
            tableMapping.ColumnMappings.Add("ObtainedGrade", "ObtainedGrade");
            tableMapping.ColumnMappings.Add("GradePoint", "GradePoint");
            tableMapping.ColumnMappings.Add("PointSecured", "PointSecured");
            tableMapping.ColumnMappings.Add("TotalMark", "TotalMark");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetExamMarkDetailsBySectionId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcacalSectionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetExamMarkDetailsBySectionIdDataTable dataTable, global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetExamMarkDetailsBySectionIdDataTable GetData(global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.GetExamMarkDetailsBySectionIdDataTable dataTable = new DataSet1.GetExamMarkDetailsBySectionIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetTabulationSheetDataByHeldInIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetTabulationSheetDataByHeldInIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetTabulationSheetDataByHeldInId";
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("Roll", "Roll");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("FormalCode", "FormalCode");
            tableMapping.ColumnMappings.Add("VersionCode", "VersionCode");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("CourseCredit", "CourseCredit");
            tableMapping.ColumnMappings.Add("ObtainedTotalMarks", "ObtainedTotalMarks");
            tableMapping.ColumnMappings.Add("ObtainedGrade", "ObtainedGrade");
            tableMapping.ColumnMappings.Add("ObtainedGPA", "ObtainedGPA");
            tableMapping.ColumnMappings.Add("PointSecured", "PointSecured");
            tableMapping.ColumnMappings.Add("TotalPointSecured", "TotalPointSecured");
            tableMapping.ColumnMappings.Add("CreditTaken", "CreditTaken");
            tableMapping.ColumnMappings.Add("CreditEarned", "CreditEarned");
            tableMapping.ColumnMappings.Add("GPA", "GPA");
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("Hall", "Hall");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetTabulationSheetDataByHeldInId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeldInId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetTabulationSheetDataByHeldInIdDataTable dataTable, global::System.Nullable<int> HeldInId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((HeldInId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(HeldInId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetTabulationSheetDataByHeldInIdDataTable GetData(global::System.Nullable<int> HeldInId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((HeldInId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(HeldInId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.GetTabulationSheetDataByHeldInIdDataTable dataTable = new DataSet1.GetTabulationSheetDataByHeldInIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetFirstSecondAndThirdExaminerMarkDetailsBySectionId";
            tableMapping.ColumnMappings.Add("Roll", "Roll");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("InternalMark", "InternalMark");
            tableMapping.ColumnMappings.Add("ExternalMark", "ExternalMark");
            tableMapping.ColumnMappings.Add("ThirdMark", "ThirdMark");
            tableMapping.ColumnMappings.Add("Average", "Average");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetFirstSecondAndThirdExaminerMarkDetailsBySectionId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcacalSectionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable dataTable, global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable GetData(global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable dataTable = new DataSet1.GetFirstSecondAndThirdExaminerMarkDetailsBySectionIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetAllRollSheetStudentListByHeldInIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetAllRollSheetStudentListByHeldInIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetAllRollSheetStudentListByHeldInId";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("ShortName", "ShortName");
            tableMapping.ColumnMappings.Add("AdmissionSession", "AdmissionSession");
            tableMapping.ColumnMappings.Add("Roll", "Roll");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("HallCode", "HallCode");
            tableMapping.ColumnMappings.Add("FormalCode", "FormalCode");
            tableMapping.ColumnMappings.Add("VersionCode", "VersionCode");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("CourseCredit", "CourseCredit");
            tableMapping.ColumnMappings.Add("SectionName", "SectionName");
            tableMapping.ColumnMappings.Add("RetakeNo", "RetakeNo");
            tableMapping.ColumnMappings.Add("CourseType", "CourseType");
            tableMapping.ColumnMappings.Add("StudentType", "StudentType");
            tableMapping.ColumnMappings.Add("PhotoPath", "PhotoPath");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetAllRollSheetStudentListByHeldInId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeldInRelationId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HallId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetAllRollSheetStudentListByHeldInIdDataTable dataTable, global::System.Nullable<int> HeldInRelationId, global::System.Nullable<int> HallId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((HeldInRelationId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(HeldInRelationId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((HallId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(HallId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetAllRollSheetStudentListByHeldInIdDataTable GetData(global::System.Nullable<int> HeldInRelationId, global::System.Nullable<int> HallId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((HeldInRelationId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(HeldInRelationId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((HallId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(HallId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            DataSet1.GetAllRollSheetStudentListByHeldInIdDataTable dataTable = new DataSet1.GetAllRollSheetStudentListByHeldInIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetAdmitCardDataByHeldInIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetAdmitCardDataByHeldInIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetAdmitCardDataByHeldInId";
            tableMapping.ColumnMappings.Add("DetailedName", "DetailedName");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("Roll", "Roll");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("FatherName", "FatherName");
            tableMapping.ColumnMappings.Add("HallName", "HallName");
            tableMapping.ColumnMappings.Add("Session", "Session");
            tableMapping.ColumnMappings.Add("TempSLNo", "TempSLNo");
            tableMapping.ColumnMappings.Add("RetakeNo", "RetakeNo");
            tableMapping.ColumnMappings.Add("FormalCode", "FormalCode");
            tableMapping.ColumnMappings.Add("VersionCode", "VersionCode");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("Credits", "Credits");
            tableMapping.ColumnMappings.Add("PhotoPath", "PhotoPath");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetAdmitCardDataByHeldInId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeldInRelationId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@ProgramId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@StudentId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetAdmitCardDataByHeldInIdDataTable dataTable, global::System.Nullable<int> HeldInRelationId, global::System.Nullable<int> ProgramId, global::System.Nullable<int> StudentId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((HeldInRelationId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(HeldInRelationId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ProgramId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(ProgramId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((StudentId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(StudentId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetAdmitCardDataByHeldInIdDataTable GetData(global::System.Nullable<int> HeldInRelationId, global::System.Nullable<int> ProgramId, global::System.Nullable<int> StudentId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((HeldInRelationId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(HeldInRelationId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((ProgramId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[2].Value = ((int)(ProgramId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[2].Value = global::System.DBNull.Value;
            }
            if ((StudentId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[3].Value = ((int)(StudentId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[3].Value = global::System.DBNull.Value;
            }
            DataSet1.GetAdmitCardDataByHeldInIdDataTable dataTable = new DataSet1.GetAdmitCardDataByHeldInIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetContinuousExamMarkDetailsBySectionIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetContinuousExamMarkDetailsBySectionIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetContinuousExamMarkDetailsBySectionId";
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("Roll", "Roll");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("CourseCredit", "CourseCredit");
            tableMapping.ColumnMappings.Add("ExamMarkDetailId", "ExamMarkDetailId");
            tableMapping.ColumnMappings.Add("Marks", "Marks");
            tableMapping.ColumnMappings.Add("ExamTemplateItemId", "ExamTemplateItemId");
            tableMapping.ColumnMappings.Add("ColumnSequence", "ColumnSequence");
            tableMapping.ColumnMappings.Add("ExamName", "ExamName");
            tableMapping.ColumnMappings.Add("ExamMark", "ExamMark");
            tableMapping.ColumnMappings.Add("ObtainedMark", "ObtainedMark");
            tableMapping.ColumnMappings.Add("PublishGrade", "PublishGrade");
            tableMapping.ColumnMappings.Add("ExamType", "ExamType");
            tableMapping.ColumnMappings.Add("SessionWithReAdd", "SessionWithReAdd");
            tableMapping.ColumnMappings.Add("ReAddStatus", "ReAddStatus");
            tableMapping.ColumnMappings.Add("ObtainedGrade", "ObtainedGrade");
            tableMapping.ColumnMappings.Add("GradePoint", "GradePoint");
            tableMapping.ColumnMappings.Add("PointSecured", "PointSecured");
            tableMapping.ColumnMappings.Add("TotalMark", "TotalMark");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetContinuousExamMarkDetailsBySectionId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcacalSectionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetContinuousExamMarkDetailsBySectionIdDataTable dataTable, global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetContinuousExamMarkDetailsBySectionIdDataTable GetData(global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.GetContinuousExamMarkDetailsBySectionIdDataTable dataTable = new DataSet1.GetContinuousExamMarkDetailsBySectionIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetTopSheetStudentListBySectionIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetTopSheetStudentListBySectionIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetTopSheetStudentListBySectionId";
            tableMapping.ColumnMappings.Add("SectionId", "SectionId");
            tableMapping.ColumnMappings.Add("TotalStudent", "TotalStudent");
            tableMapping.ColumnMappings.Add("TotalPresent", "TotalPresent");
            tableMapping.ColumnMappings.Add("Total", "Total");
            tableMapping.ColumnMappings.Add("PresentList", "PresentList");
            tableMapping.ColumnMappings.Add("AbsentList", "AbsentList");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetTopSheetStudentListBySectionId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcacalSectionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetTopSheetStudentListBySectionIdDataTable dataTable, global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetTopSheetStudentListBySectionIdDataTable GetData(global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.GetTopSheetStudentListBySectionIdDataTable dataTable = new DataSet1.GetTopSheetStudentListBySectionIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetFirstExaminerFinalAssessmentMarkBySectionIdTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetFirstExaminerFinalAssessmentMarkBySectionIdTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetFirstExaminerFinalAssessmentMarkBySectionId";
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("StudentAdmissionAcaCalId", "StudentAdmissionAcaCalId");
            tableMapping.ColumnMappings.Add("Roll", "Roll");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("MarkDiff", "MarkDiff");
            tableMapping.ColumnMappings.Add("TotalMark", "TotalMark");
            tableMapping.ColumnMappings.Add("SessionWithReAdd", "SessionWithReAdd");
            tableMapping.ColumnMappings.Add("ReAddStatus", "ReAddStatus");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetFirstExaminerFinalAssessmentMarkBySectionId";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@AcacalSectionId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable dataTable, global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable GetData(global::System.Nullable<int> AcacalSectionId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((AcacalSectionId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(AcacalSectionId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable dataTable = new DataSet1.GetFirstExaminerFinalAssessmentMarkBySectionIdDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class GetTabulationSheetDataByHeldInIdNewTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.SqlClient.SqlDataAdapter _adapter;
        
        private global::System.Data.SqlClient.SqlConnection _connection;
        
        private global::System.Data.SqlClient.SqlTransaction _transaction;
        
        private global::System.Data.SqlClient.SqlCommand[] _commandCollection;
        
        private bool _clearBeforeFill;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public GetTabulationSheetDataByHeldInIdNewTableAdapter() {
            this.ClearBeforeFill = true;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected internal global::System.Data.SqlClient.SqlDataAdapter Adapter {
            get {
                if ((this._adapter == null)) {
                    this.InitAdapter();
                }
                return this._adapter;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlConnection Connection {
            get {
                if ((this._connection == null)) {
                    this.InitConnection();
                }
                return this._connection;
            }
            set {
                this._connection = value;
                if ((this.Adapter.InsertCommand != null)) {
                    this.Adapter.InsertCommand.Connection = value;
                }
                if ((this.Adapter.DeleteCommand != null)) {
                    this.Adapter.DeleteCommand.Connection = value;
                }
                if ((this.Adapter.UpdateCommand != null)) {
                    this.Adapter.UpdateCommand.Connection = value;
                }
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    if ((this.CommandCollection[i] != null)) {
                        ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[i])).Connection = value;
                    }
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        internal global::System.Data.SqlClient.SqlTransaction Transaction {
            get {
                return this._transaction;
            }
            set {
                this._transaction = value;
                for (int i = 0; (i < this.CommandCollection.Length); i = (i + 1)) {
                    this.CommandCollection[i].Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.DeleteCommand != null))) {
                    this.Adapter.DeleteCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.InsertCommand != null))) {
                    this.Adapter.InsertCommand.Transaction = this._transaction;
                }
                if (((this.Adapter != null) 
                            && (this.Adapter.UpdateCommand != null))) {
                    this.Adapter.UpdateCommand.Transaction = this._transaction;
                }
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.SqlClient.SqlCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool ClearBeforeFill {
            get {
                return this._clearBeforeFill;
            }
            set {
                this._clearBeforeFill = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitAdapter() {
            this._adapter = new global::System.Data.SqlClient.SqlDataAdapter();
            global::System.Data.Common.DataTableMapping tableMapping = new global::System.Data.Common.DataTableMapping();
            tableMapping.SourceTable = "Table";
            tableMapping.DataSetTable = "GetTabulationSheetDataByHeldInIdNew";
            tableMapping.ColumnMappings.Add("ID", "ID");
            tableMapping.ColumnMappings.Add("StudentID", "StudentID");
            tableMapping.ColumnMappings.Add("Roll", "Roll");
            tableMapping.ColumnMappings.Add("FullName", "FullName");
            tableMapping.ColumnMappings.Add("Hall", "Hall");
            tableMapping.ColumnMappings.Add("FormalCode", "FormalCode");
            tableMapping.ColumnMappings.Add("VersionCode", "VersionCode");
            tableMapping.ColumnMappings.Add("Title", "Title");
            tableMapping.ColumnMappings.Add("CourseCredit", "CourseCredit");
            tableMapping.ColumnMappings.Add("ObtainedTotalMarks", "ObtainedTotalMarks");
            tableMapping.ColumnMappings.Add("ObtainedGrade", "ObtainedGrade");
            tableMapping.ColumnMappings.Add("ObtainedGPA", "ObtainedGPA");
            tableMapping.ColumnMappings.Add("PointSecured", "PointSecured");
            tableMapping.ColumnMappings.Add("SessionWithReAdd", "SessionWithReAdd");
            tableMapping.ColumnMappings.Add("ReAddStatus", "ReAddStatus");
            tableMapping.ColumnMappings.Add("ContinuosAssesment", "ContinuosAssesment");
            tableMapping.ColumnMappings.Add("FinalMark", "FinalMark");
            tableMapping.ColumnMappings.Add("TotalPointSecured", "TotalPointSecured");
            tableMapping.ColumnMappings.Add("CreditTaken", "CreditTaken");
            tableMapping.ColumnMappings.Add("CreditEarned", "CreditEarned");
            tableMapping.ColumnMappings.Add("GPA", "GPA");
            this._adapter.TableMappings.Add(tableMapping);
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitConnection() {
            this._connection = new global::System.Data.SqlClient.SqlConnection();
            this._connection.ConnectionString = System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.SqlClient.SqlCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            this._commandCollection[0].Connection = this.Connection;
            this._commandCollection[0].CommandText = "dbo.GetTabulationSheetDataByHeldInIdNew";
            this._commandCollection[0].CommandType = global::System.Data.CommandType.StoredProcedure;
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            this._commandCollection[0].Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@HeldInId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Fill, true)]
        public virtual int Fill(DataSet1.GetTabulationSheetDataByHeldInIdNewDataTable dataTable, global::System.Nullable<int> HeldInId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((HeldInId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(HeldInId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((this.ClearBeforeFill == true)) {
                dataTable.Clear();
            }
            int returnValue = this.Adapter.Fill(dataTable);
            return returnValue;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        [global::System.ComponentModel.DataObjectMethodAttribute(global::System.ComponentModel.DataObjectMethodType.Select, true)]
        public virtual DataSet1.GetTabulationSheetDataByHeldInIdNewDataTable GetData(global::System.Nullable<int> HeldInId) {
            this.Adapter.SelectCommand = this.CommandCollection[0];
            if ((HeldInId.HasValue == true)) {
                this.Adapter.SelectCommand.Parameters[1].Value = ((int)(HeldInId.Value));
            }
            else {
                this.Adapter.SelectCommand.Parameters[1].Value = global::System.DBNull.Value;
            }
            DataSet1.GetTabulationSheetDataByHeldInIdNewDataTable dataTable = new DataSet1.GetTabulationSheetDataByHeldInIdNewDataTable();
            this.Adapter.Fill(dataTable);
            return dataTable;
        }
    }
    
    /// <summary>
    ///Represents the connection and commands used to retrieve and save data.
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DataObjectAttribute(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" +
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
    public partial class QueriesTableAdapter : global::System.ComponentModel.Component {
        
        private global::System.Data.IDbCommand[] _commandCollection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected global::System.Data.IDbCommand[] CommandCollection {
            get {
                if ((this._commandCollection == null)) {
                    this.InitCommandCollection();
                }
                return this._commandCollection;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private void InitCommandCollection() {
            this._commandCollection = new global::System.Data.IDbCommand[1];
            this._commandCollection[0] = new global::System.Data.SqlClient.SqlCommand();
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Connection = new global::System.Data.SqlClient.SqlConnection(System.Configuration.ConfigurationManager.ConnectionStrings["Connection String"].ConnectionString);
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandText = "dbo.GetPercentageByAcademicCalAcacalByPOCO";
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).CommandType = global::System.Data.CommandType.StoredProcedure;
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@RETURN_VALUE", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.ReturnValue, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@academicCalId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
            ((global::System.Data.SqlClient.SqlCommand)(this._commandCollection[0])).Parameters.Add(new global::System.Data.SqlClient.SqlParameter("@acaCalSecId", global::System.Data.SqlDbType.Int, 4, global::System.Data.ParameterDirection.Input, 10, 0, null, global::System.Data.DataRowVersion.Current, false, null, "", "", ""));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")]
        public virtual int GetPercentageByAcademicCalAcacalByPOCO(global::System.Nullable<int> academicCalId, global::System.Nullable<int> acaCalSecId) {
            global::System.Data.SqlClient.SqlCommand command = ((global::System.Data.SqlClient.SqlCommand)(this.CommandCollection[0]));
            if ((academicCalId.HasValue == true)) {
                command.Parameters[1].Value = ((int)(academicCalId.Value));
            }
            else {
                command.Parameters[1].Value = global::System.DBNull.Value;
            }
            if ((acaCalSecId.HasValue == true)) {
                command.Parameters[2].Value = ((int)(acaCalSecId.Value));
            }
            else {
                command.Parameters[2].Value = global::System.DBNull.Value;
            }
            global::System.Data.ConnectionState previousConnectionState = command.Connection.State;
            if (((command.Connection.State & global::System.Data.ConnectionState.Open) 
                        != global::System.Data.ConnectionState.Open)) {
                command.Connection.Open();
            }
            int returnValue;
            try {
                returnValue = command.ExecuteNonQuery();
            }
            finally {
                if ((previousConnectionState == global::System.Data.ConnectionState.Closed)) {
                    command.Connection.Close();
                }
            }
            return returnValue;
        }
    }
    
    /// <summary>
    ///TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    ///</summary>
    [global::System.ComponentModel.DesignerCategoryAttribute("code")]
    [global::System.ComponentModel.ToolboxItem(true)]
    [global::System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" +
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]
    [global::System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")]
    public partial class TableAdapterManager : global::System.ComponentModel.Component {
        
        private UpdateOrderOption _updateOrder;
        
        private bool _backupDataSetBeforeUpdate;
        
        private global::System.Data.IDbConnection _connection;
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public UpdateOrderOption UpdateOrder {
            get {
                return this._updateOrder;
            }
            set {
                this._updateOrder = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public bool BackupDataSetBeforeUpdate {
            get {
                return this._backupDataSetBeforeUpdate;
            }
            set {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public global::System.Data.IDbConnection Connection {
            get {
                if ((this._connection != null)) {
                    return this._connection;
                }
                return null;
            }
            set {
                this._connection = value;
            }
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        [global::System.ComponentModel.Browsable(false)]
        public int TableAdapterInstanceCount {
            get {
                int count = 0;
                return count;
            }
        }
        
        /// <summary>
        ///Update rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateUpdatedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Insert rows in top-down order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Delete rows in bottom-up order.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateDeletedRows(DataSet1 dataSet, global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows) {
            int result = 0;
            return result;
        }
        
        /// <summary>
        ///Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private global::System.Data.DataRow[] GetRealUpdatedRows(global::System.Data.DataRow[] updatedRows, global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows) {
            if (((updatedRows == null) 
                        || (updatedRows.Length < 1))) {
                return updatedRows;
            }
            if (((allAddedRows == null) 
                        || (allAddedRows.Count < 1))) {
                return updatedRows;
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> realUpdatedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            for (int i = 0; (i < updatedRows.Length); i = (i + 1)) {
                global::System.Data.DataRow row = updatedRows[i];
                if ((allAddedRows.Contains(row) == false)) {
                    realUpdatedRows.Add(row);
                }
            }
            return realUpdatedRows.ToArray();
        }
        
        /// <summary>
        ///Update all changes to the dataset.
        ///</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(DataSet1 dataSet) {
            if ((dataSet == null)) {
                throw new global::System.ArgumentNullException("dataSet");
            }
            if ((dataSet.HasChanges() == false)) {
                return 0;
            }
            global::System.Data.IDbConnection workConnection = this.Connection;
            if ((workConnection == null)) {
                throw new global::System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" +
                        "ger TableAdapter property to a valid TableAdapter instance.");
            }
            bool workConnOpened = false;
            if (((workConnection.State & global::System.Data.ConnectionState.Broken) 
                        == global::System.Data.ConnectionState.Broken)) {
                workConnection.Close();
            }
            if ((workConnection.State == global::System.Data.ConnectionState.Closed)) {
                workConnection.Open();
                workConnOpened = true;
            }
            global::System.Data.IDbTransaction workTransaction = workConnection.BeginTransaction();
            if ((workTransaction == null)) {
                throw new global::System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" +
                        "ctions or the current state is not allowing the transaction to begin.");
            }
            global::System.Collections.Generic.List<global::System.Data.DataRow> allChangedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.DataRow> allAddedRows = new global::System.Collections.Generic.List<global::System.Data.DataRow>();
            global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter> adaptersWithAcceptChangesDuringUpdate = new global::System.Collections.Generic.List<global::System.Data.Common.DataAdapter>();
            global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection> revertConnections = new global::System.Collections.Generic.Dictionary<object, global::System.Data.IDbConnection>();
            int result = 0;
            global::System.Data.DataSet backupDataSet = null;
            if (this.BackupDataSetBeforeUpdate) {
                backupDataSet = new global::System.Data.DataSet();
                backupDataSet.Merge(dataSet);
            }
            try {
                // ---- Prepare for update -----------
                //
                // 
                //---- Perform updates -----------
                //
                if ((this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)) {
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                }
                else {
                    result = (result + this.UpdateInsertedRows(dataSet, allAddedRows));
                    result = (result + this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows));
                }
                result = (result + this.UpdateDeletedRows(dataSet, allChangedRows));
                // 
                //---- Commit updates -----------
                //
                workTransaction.Commit();
                if ((0 < allAddedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
                if ((0 < allChangedRows.Count)) {
                    global::System.Data.DataRow[] rows = new System.Data.DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rows);
                    for (int i = 0; (i < rows.Length); i = (i + 1)) {
                        global::System.Data.DataRow row = rows[i];
                        row.AcceptChanges();
                    }
                }
            }
            catch (global::System.Exception ex) {
                workTransaction.Rollback();
                // ---- Restore the dataset -----------
                if (this.BackupDataSetBeforeUpdate) {
                    global::System.Diagnostics.Debug.Assert((backupDataSet != null));
                    dataSet.Clear();
                    dataSet.Merge(backupDataSet);
                }
                else {
                    if ((0 < allAddedRows.Count)) {
                        global::System.Data.DataRow[] rows = new System.Data.DataRow[allAddedRows.Count];
                        allAddedRows.CopyTo(rows);
                        for (int i = 0; (i < rows.Length); i = (i + 1)) {
                            global::System.Data.DataRow row = rows[i];
                            row.AcceptChanges();
                            row.SetAdded();
                        }
                    }
                }
                throw ex;
            }
            finally {
                if (workConnOpened) {
                    workConnection.Close();
                }
                if ((0 < adaptersWithAcceptChangesDuringUpdate.Count)) {
                    global::System.Data.Common.DataAdapter[] adapters = new System.Data.Common.DataAdapter[adaptersWithAcceptChangesDuringUpdate.Count];
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters);
                    for (int i = 0; (i < adapters.Length); i = (i + 1)) {
                        global::System.Data.Common.DataAdapter adapter = adapters[i];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return result;
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual void SortSelfReferenceRows(global::System.Data.DataRow[] rows, global::System.Data.DataRelation relation, bool childFirst) {
            global::System.Array.Sort<global::System.Data.DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        protected virtual bool MatchTableAdapterConnection(global::System.Data.IDbConnection inputConnection) {
            if ((this._connection != null)) {
                return true;
            }
            if (((this.Connection == null) 
                        || (inputConnection == null))) {
                return true;
            }
            if (string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, global::System.StringComparison.Ordinal)) {
                return true;
            }
            return false;
        }
        
        /// <summary>
        ///Update Order Option
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption {
            
            InsertUpdateDelete = 0,
            
            UpdateInsertDelete = 1,
        }
        
        /// <summary>
        ///Used to sort self-referenced table's rows
        ///</summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : object, global::System.Collections.Generic.IComparer<global::System.Data.DataRow> {
            
            private global::System.Data.DataRelation _relation;
            
            private int _childFirst;
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            internal SelfReferenceComparer(global::System.Data.DataRelation relation, bool childFirst) {
                this._relation = relation;
                if (childFirst) {
                    this._childFirst = -1;
                }
                else {
                    this._childFirst = 1;
                }
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            private global::System.Data.DataRow GetRoot(global::System.Data.DataRow row, out int distance) {
                global::System.Diagnostics.Debug.Assert((row != null));
                global::System.Data.DataRow root = row;
                distance = 0;

                global::System.Collections.Generic.IDictionary<global::System.Data.DataRow, global::System.Data.DataRow> traversedRows = new global::System.Collections.Generic.Dictionary<global::System.Data.DataRow, global::System.Data.DataRow>();
                traversedRows[row] = row;

                global::System.Data.DataRow parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                for (
                ; ((parent != null) 
                            && (traversedRows.ContainsKey(parent) == false)); 
                ) {
                    distance = (distance + 1);
                    root = parent;
                    traversedRows[parent] = parent;
                    parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Default);
                }

                if ((distance == 0)) {
                    traversedRows.Clear();
                    traversedRows[row] = row;
                    parent = row.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    for (
                    ; ((parent != null) 
                                && (traversedRows.ContainsKey(parent) == false)); 
                    ) {
                        distance = (distance + 1);
                        root = parent;
                        traversedRows[parent] = parent;
                        parent = parent.GetParentRow(this._relation, global::System.Data.DataRowVersion.Original);
                    }
                }

                return root;
            }
            
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
            [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(global::System.Data.DataRow row1, global::System.Data.DataRow row2) {
                if (object.ReferenceEquals(row1, row2)) {
                    return 0;
                }
                if ((row1 == null)) {
                    return -1;
                }
                if ((row2 == null)) {
                    return 1;
                }

                int distance1 = 0;
                global::System.Data.DataRow root1 = this.GetRoot(row1, out distance1);

                int distance2 = 0;
                global::System.Data.DataRow root2 = this.GetRoot(row2, out distance2);

                if (object.ReferenceEquals(root1, root2)) {
                    return (this._childFirst * distance1.CompareTo(distance2));
                }
                else {
                    global::System.Diagnostics.Debug.Assert(((root1.Table != null) 
                                    && (root2.Table != null)));
                    if ((root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2))) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                }
            }
        }
    }
}

#pragma warning restore 1591